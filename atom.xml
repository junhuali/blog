<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Junhua&#39;s Blog</title>
  
  
  <link href="https://blog.searchinfogo.com/atom.xml" rel="self"/>
  
  <link href="https://blog.searchinfogo.com/"/>
  <updated>2020-08-27T08:52:12.857Z</updated>
  <id>https://blog.searchinfogo.com/</id>
  
  <author>
    <name>junhua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 安装 wkhtmltopdf</title>
    <link href="https://blog.searchinfogo.com/2020/07/28/linux-install-wkhtmltox/"/>
    <id>https://blog.searchinfogo.com/2020/07/28/linux-install-wkhtmltox/</id>
    <published>2020-07-28T09:02:46.000Z</published>
    <updated>2020-08-27T08:52:12.857Z</updated>
    
    <content type="html"><![CDATA[<p>最近在e签宝相关的开发，需要将html生成pdf，查找了一下常规的方案，有itext（html2pdf),wkhtmltopdf等。使用freemarker等。最后选择使用wkhtmltopdf（不需要关心字体之类的配置）。生产部署的时候需要安装在服务器。<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#下载 下载页面https:&#x2F;&#x2F;wkhtmltopdf.org&#x2F;downloads.html</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;wkhtmltopdf&#x2F;packaging&#x2F;releases&#x2F;download&#x2F;0.12.6-1&#x2F;wkhtmltox-0.12.6-1.centos7.x86_64.rpm</span><br><span class="line">rpm -ivh wkhtmltox-0.12.6-1.centos7.x86_64.rpm</span><br></pre></td></tr></table></figure><p>安装的过程中可能会提示报错，安装对应的依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#安装相关依赖(根据rpm 安装的时候的提示进行安装)</span><br><span class="line">yum install -y openssl fontconfig freetype libpng libjpeg libX11 libXext libXrender xorg-x11-fonts-Type1 xorg-x11-fonts-75dpi</span><br><span class="line">#再次安装</span><br><span class="line">rpm -ivh wkhtmltox-0.12.6-1.centos7.x86_64.rpm</span><br><span class="line">#检查安装是否成功</span><br><span class="line">wkhtmltopdf -V</span><br></pre></td></tr></table></figure><p>使用java开发，可以使用下面的jar，操作起来更加的方便</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;jhonnymertz&#x2F;java-wkhtmltopdf-wrapper</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.jhonnymertz&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;java-wkhtmltopdf-wrapper&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.1.12-RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>在后续的上线中，发现在Linux容器中，生成合同的时候会产生乱码，查询相关文档，发现还是需要添加字体。<br>下载<a href="simsun.ttc">simsun字体</a>,将文件复制到linux服务器<code>/usr/share/fonts/</code> 中。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在e签宝相关的开发，需要将html生成pdf，查找了一下常规的方案，有itext（html2pdf),wkhtmltopdf等。使用freemarker等。最后选择使用wkhtmltopdf（不需要关心字体之类的配置）。生产部署的时候需要安装在服务器。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="wkhtmltox" scheme="https://blog.searchinfogo.com/tags/wkhtmltox/"/>
    
  </entry>
  
  <entry>
    <title>brew 使用</title>
    <link href="https://blog.searchinfogo.com/2020/07/08/use-brew/"/>
    <id>https://blog.searchinfogo.com/2020/07/08/use-brew/</id>
    <published>2020-07-08T03:21:10.000Z</published>
    <updated>2020-08-27T03:23:19.204Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下常用的brew 命令 <a id="more"></a></p><h3 id="brew-常用命令"><a href="#brew-常用命令" class="headerlink" title="brew 常用命令"></a>brew 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有通过 brew 安装的包</span></span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个包的信息</span></span><br><span class="line">brew info (formula)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 brew</span></span><br><span class="line">brew update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看需要更新的包(需要先执行 brew update)</span></span><br><span class="line">brew outdated</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新某个或全部包</span></span><br><span class="line">brew upgrade (formula|--all)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 brew 安装的服务列表，及当前状态(是否启动)</span></span><br><span class="line">brew services list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动某个或所有服务</span></span><br><span class="line">brew services run (formula|--all)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动某个或所有服务(并注册到用户登录/开机自动启动)</span></span><br><span class="line">brew services start (formula|--all)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭某个或所有服务</span></span><br><span class="line">brew services stop (formula|--all)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启某个或所有服务</span></span><br><span class="line">brew services restart (formula|--all)</span><br></pre></td></tr></table></figure><h3 id="Cakebrew"><a href="#Cakebrew" class="headerlink" title="Cakebrew"></a>Cakebrew</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install cakebrew</span><br></pre></td></tr></table></figure><h3 id="LaunchRocket"><a href="#LaunchRocket" class="headerlink" title="LaunchRocket"></a>LaunchRocket</h3><p>而 LaunchRocket 呢，则是一个帮助管理 Homebrew 安装的服务的软件，比如你使用 Homebrew 安装的 Mysql、Redis、MongoDB，是让它自启动呢，还是手动启动，传统方式需要使用命令行的命令，而使用 LaunchRocket 则可以在图形界面中进行管理了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install launchrocket</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一下常用的brew 命令</summary>
    
    
    
    <category term="Shell" scheme="https://blog.searchinfogo.com/categories/Shell/"/>
    
    
    <category term="brew" scheme="https://blog.searchinfogo.com/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>Nginx学习日志 3</title>
    <link href="https://blog.searchinfogo.com/2020/06/18/nginx-study-3/"/>
    <id>https://blog.searchinfogo.com/2020/06/18/nginx-study-3/</id>
    <published>2020-06-18T02:29:38.000Z</published>
    <updated>2020-06-20T03:31:54.086Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx是异步框架的网页服务器，也可以用作反向代理、负载平衡器和HTTP缓存。<a id="more"></a></p><h3 id="静态资源web服务器搭建"><a href="#静态资源web服务器搭建" class="headerlink" title="静态资源web服务器搭建"></a>静态资源web服务器搭建</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            <span class="built_in">alias</span>   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>主要配置server，location 指定对应的文件目录，建议使用alias，使用root，会将文件路径混入到文件路径中，开启gizp，可以减少传输文件大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gip on; <span class="comment"># 开启gizp</span></span><br><span class="line">gipz_min_length 1; <span class="comment">#最小文件</span></span><br><span class="line">gipz_comp_level 2; <span class="comment">#压缩级别</span></span><br><span class="line">gizp_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png <span class="comment">#压缩文件类型，有些文件类型没有必要再进行压缩 .rar等</span></span><br></pre></td></tr></table></figure><h3 id="静态文件服务器"><a href="#静态文件服务器" class="headerlink" title="静态文件服务器"></a>静态文件服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">alias</span>   html;</span><br><span class="line">    <span class="comment">#开启文件目录</span></span><br><span class="line">    autoindex on;</span><br><span class="line">    <span class="comment">#限制文件传输速度1k</span></span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$limit_rate</span> 1k;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="access日志格式"><a href="#access日志格式" class="headerlink" title="access日志格式"></a>access日志格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#日志格式化</span></span><br><span class="line"><span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line"><span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line"><span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"><span class="comment">#access_log  logs/access.log  main;</span></span><br></pre></td></tr></table></figure><h3 id="反向代理服务器"><a href="#反向代理服务器" class="headerlink" title="反向代理服务器"></a>反向代理服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    listen       80</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">                proxy_pass  http://127.0.0.1:8080;</span><br><span class="line">                proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">                proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">                proxy_set_header   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">                proxy_set_header   Cookie <span class="variable">$http_cookie</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="缓存服务器"><a href="#缓存服务器" class="headerlink" title="缓存服务器"></a>缓存服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path /tmp/nginxcache levels=1:2 keys_zone=my_cache:10m max_size=10g</span><br><span class="line">                 inactive=60m user_temp_path=off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    listen       80</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">                proxy_pass  http://127.0.0.1:8080;</span><br><span class="line">                proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">                proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">                proxy_set_header   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">                proxy_set_header   Cookie <span class="variable">$http_cookie</span>;</span><br><span class="line"></span><br><span class="line">                proxy_cache my_cache;</span><br><span class="line">                proxy_cache_key <span class="variable">$host</span><span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">                proxy_cache_valid 200 304 302 1d;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Nginx是异步框架的网页服务器，也可以用作反向代理、负载平衡器和HTTP缓存。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Nginx" scheme="https://blog.searchinfogo.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx学习日志 2</title>
    <link href="https://blog.searchinfogo.com/2020/06/10/nginx-study-2/"/>
    <id>https://blog.searchinfogo.com/2020/06/10/nginx-study-2/</id>
    <published>2020-06-10T02:25:38.000Z</published>
    <updated>2020-06-10T03:27:27.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nginx-配置语法"><a href="#Nginx-配置语法" class="headerlink" title="Nginx 配置语法"></a>Nginx 配置语法</h3><ul><li>配置文件由指令与指令块组成</li><li>每条指令以 ; 结尾，指令与参数以空格符号分隔</li><li>指令块以{} 大括号将多条指令组合在一起</li><li>include 语句允许组合多个配置文件以提升可维护性</li><li>使用#符号添加注释，提高可读性</li><li>使用$符变量</li><li>部分指令的参数支持正则表达式<a id="more"></a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx.conf</span></span><br><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">    <span class="comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx&#x27;s one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       8000;</span></span><br><span class="line">    <span class="comment">#    listen       somename:8080;</span></span><br><span class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># HTTPS server</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#server &#123;</span></span><br><span class="line">    <span class="comment">#    listen       443 ssl;</span></span><br><span class="line">    <span class="comment">#    server_name  localhost;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_certificate      cert.pem;</span></span><br><span class="line">    <span class="comment">#    ssl_certificate_key  cert.key;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class="line">    <span class="comment">#    ssl_session_timeout  5m;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class="line">    <span class="comment">#    ssl_prefer_server_ciphers  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#    location / &#123;</span></span><br><span class="line">    <span class="comment">#        root   html;</span></span><br><span class="line">    <span class="comment">#        index  index.html index.htm;</span></span><br><span class="line">    <span class="comment">#    &#125;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br></pre></td></tr></table></figure><p>http配置指令块主要包含下面4个部分</p><ul><li>http</li><li>server</li><li>location</li><li>upstream</li></ul><h3 id="Nginx命令行"><a href="#Nginx命令行" class="headerlink" title="Nginx命令行"></a>Nginx命令行</h3><ul><li>格式 nginx -s reload</li><li>帮助 -? -h</li><li>使用指定的配置文件 -c</li><li>指定配置文件指定 -g</li><li>指定运行目录 -p</li><li>发送信号 -s(立刻停止 stop 优雅退出 quit 重载配置文件 reload 重新开始记录日志文件reopen)</li><li>测试配置文件是否有语法错误 -t -T</li><li>打印Nginx的版本信息、编译信息等 -v -V</li></ul><h3 id="Nginx-热部署"><a href="#Nginx-热部署" class="headerlink" title="Nginx 热部署"></a>Nginx 热部署</h3><h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><p>cp nginx nginx.old<br>用新编译好的nginx 替换</p><h4 id="部署切换"><a href="#部署切换" class="headerlink" title="部署切换"></a>部署切换</h4><figure class="highlight ps"><figcaption><span>-ef | grep nginx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进程会平滑切换</span></span><br><span class="line"><span class="built_in">kill</span> <span class="literal">-USR2</span> pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#优雅退出</span></span><br><span class="line"><span class="built_in">kill</span> <span class="literal">-WNCH</span> pid</span><br></pre></td></tr></table></figure><h3 id="日志切割"><a href="#日志切割" class="headerlink" title="日志切割"></a>日志切割</h3><p>移动日志 mv xxx.log xxx.bak 重新开始记录日志文件,更好的方式是通过脚本进行<br>./nginx -s reopen </p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Nginx-配置语法&quot;&gt;&lt;a href=&quot;#Nginx-配置语法&quot; class=&quot;headerlink&quot; title=&quot;Nginx 配置语法&quot;&gt;&lt;/a&gt;Nginx 配置语法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;配置文件由指令与指令块组成&lt;/li&gt;
&lt;li&gt;每条指令以 ; 结尾，指令与参数以空格符号分隔&lt;/li&gt;
&lt;li&gt;指令块以{} 大括号将多条指令组合在一起&lt;/li&gt;
&lt;li&gt;include 语句允许组合多个配置文件以提升可维护性&lt;/li&gt;
&lt;li&gt;使用#符号添加注释，提高可读性&lt;/li&gt;
&lt;li&gt;使用$符变量&lt;/li&gt;
&lt;li&gt;部分指令的参数支持正则表达式</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Nginx" scheme="https://blog.searchinfogo.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 学习日志 1</title>
    <link href="https://blog.searchinfogo.com/2020/06/05/nginx-study-1/"/>
    <id>https://blog.searchinfogo.com/2020/06/05/nginx-study-1/</id>
    <published>2020-06-05T07:36:53.000Z</published>
    <updated>2020-06-10T02:32:31.933Z</updated>
    
    <content type="html"><![CDATA[<h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>之前的时候写过<code>Centos yum 安装nginx 后增加模块</code>,源码安装的时候一笔带过，最近在学习Nginx其中的一些知识点，所以记录一下手动安装的过程，以及相关的配置。<a id="more"></a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Nginx 一般可以去官网下载，<a href="https://www.nginx.org/">Nginx</a>,Nginx也有对应的商业版本<a href="https://www.nginx.com/">Nginx Plus</a>, 还有一些其他的基于Nginx开发的版本，<a href="https://tengine.taobao.org/">Tengine</a>和<a href="http://openresty.org/">OpenResty</a>都是比较有名的。</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><a href="https://nginx.org/en/download.html">Nginx下载</a>,如下图，进入到下载页面，使用<code>stable version</code>稳定版。<br><img src="WX20200605-151113@2x.png" alt="nginx"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载</span></span><br><span class="line">wget https://nginx.org/download/nginx-1.18.0.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xzf nginx-1.18.0.tar.gz</span><br></pre></td></tr></table></figure><h3 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> nginx-1.18.0/</span><br><span class="line"></span><br><span class="line">tree -L 1 (查看1层目录，如果没有tree 命令 yum -y install tree 进行安装 )</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">├── auto         <span class="comment"># 编译、lib库、操作系统判断</span></span><br><span class="line">├── CHANGES      <span class="comment"># feature、版本变更、bugfix</span></span><br><span class="line">├── CHANGES.ru   <span class="comment"># 俄语changes</span></span><br><span class="line">├── conf         <span class="comment"># 示例文件</span></span><br><span class="line">├── configure    <span class="comment"># 生成中间文件</span></span><br><span class="line">├── contrib      <span class="comment"># vim等相关配置</span></span><br><span class="line">├── html         <span class="comment"># 标准文件页面50</span></span><br><span class="line">├── LICENSE      <span class="comment"># LICENSE</span></span><br><span class="line">├── man          <span class="comment"># 帮助文件</span></span><br><span class="line">├── README       <span class="comment">#</span></span><br><span class="line">└── src          <span class="comment"># 源码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制vim 配置，可以让nginx配置显示颜色，更加方便的配置</span></span><br><span class="line">cp -r contrib/vim/* ~/.vim/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看编译配置</span></span><br><span class="line">./configure --<span class="built_in">help</span> | cat</span><br><span class="line">  --<span class="built_in">help</span>                             <span class="built_in">print</span> this message</span><br><span class="line"></span><br><span class="line">  --prefix=PATH                      <span class="built_in">set</span> installation prefix</span><br><span class="line">  --sbin-path=PATH                   <span class="built_in">set</span> nginx binary pathname</span><br><span class="line">  --modules-path=PATH                <span class="built_in">set</span> modules path</span><br><span class="line">  --conf-path=PATH                   <span class="built_in">set</span> nginx.conf pathname</span><br><span class="line">  --error-log-path=PATH              <span class="built_in">set</span> error <span class="built_in">log</span> pathname</span><br><span class="line">  --pid-path=PATH                    <span class="built_in">set</span> nginx.pid pathname</span><br><span class="line">  --lock-path=PATH                   <span class="built_in">set</span> nginx.lock pathname</span><br><span class="line"></span><br><span class="line">  --user=USER                        <span class="built_in">set</span> non-privileged user <span class="keyword">for</span></span><br><span class="line">                                     worker processes</span><br><span class="line">  --group=GROUP                      <span class="built_in">set</span> non-privileged group <span class="keyword">for</span></span><br><span class="line">                                     worker processes</span><br><span class="line"></span><br><span class="line">  --build=NAME                       <span class="built_in">set</span> build name</span><br><span class="line">  --builddir=DIR                     <span class="built_in">set</span> build directory</span><br><span class="line"></span><br><span class="line">  --with-select_module               <span class="built_in">enable</span> select module</span><br><span class="line">  --without-select_module            <span class="built_in">disable</span> select module</span><br><span class="line">  --with-poll_module                 <span class="built_in">enable</span> poll module</span><br><span class="line">  --without-poll_module              <span class="built_in">disable</span> poll module</span><br><span class="line"></span><br><span class="line">  --with-threads                     <span class="built_in">enable</span> thread pool support</span><br><span class="line"></span><br><span class="line">  --with-file-aio                    <span class="built_in">enable</span> file AIO support</span><br><span class="line"></span><br><span class="line">  --with-http_ssl_module             <span class="built_in">enable</span> ngx_http_ssl_module</span><br><span class="line">  --with-http_v2_module              <span class="built_in">enable</span> ngx_http_v2_module</span><br><span class="line">  --with-http_realip_module          <span class="built_in">enable</span> ngx_http_realip_module</span><br><span class="line">  --with-http_addition_module        <span class="built_in">enable</span> ngx_http_addition_module</span><br><span class="line">  --with-http_xslt_module            <span class="built_in">enable</span> ngx_http_xslt_module</span><br><span class="line">  --with-http_xslt_module=dynamic    <span class="built_in">enable</span> dynamic ngx_http_xslt_module</span><br><span class="line">  --with-http_image_filter_module    <span class="built_in">enable</span> ngx_http_image_filter_module</span><br><span class="line">  --with-http_image_filter_module=dynamic</span><br><span class="line">                                     <span class="built_in">enable</span> dynamic ngx_http_image_filter_module</span><br><span class="line">  --with-http_geoip_module           <span class="built_in">enable</span> ngx_http_geoip_module</span><br><span class="line">  --with-http_geoip_module=dynamic   <span class="built_in">enable</span> dynamic ngx_http_geoip_module</span><br><span class="line">  --with-http_sub_module             <span class="built_in">enable</span> ngx_http_sub_module</span><br><span class="line">  --with-http_dav_module             <span class="built_in">enable</span> ngx_http_dav_module</span><br><span class="line">  --with-http_flv_module             <span class="built_in">enable</span> ngx_http_flv_module</span><br><span class="line">  --with-http_mp4_module             <span class="built_in">enable</span> ngx_http_mp4_module</span><br><span class="line">  --with-http_gunzip_module          <span class="built_in">enable</span> ngx_http_gunzip_module</span><br><span class="line">  --with-http_gzip_static_module     <span class="built_in">enable</span> ngx_http_gzip_static_module</span><br><span class="line">  --with-http_auth_request_module    <span class="built_in">enable</span> ngx_http_auth_request_module</span><br><span class="line">  --with-http_random_index_module    <span class="built_in">enable</span> ngx_http_random_index_module</span><br><span class="line">  --with-http_secure_link_module     <span class="built_in">enable</span> ngx_http_secure_link_module</span><br><span class="line">  --with-http_degradation_module     <span class="built_in">enable</span> ngx_http_degradation_module</span><br><span class="line">  --with-http_slice_module           <span class="built_in">enable</span> ngx_http_slice_module</span><br><span class="line">  --with-http_stub_status_module     <span class="built_in">enable</span> ngx_http_stub_status_module</span><br><span class="line"></span><br><span class="line">  --without-http_charset_module      <span class="built_in">disable</span> ngx_http_charset_module</span><br><span class="line">  --without-http_gzip_module         <span class="built_in">disable</span> ngx_http_gzip_module</span><br><span class="line">  --without-http_ssi_module          <span class="built_in">disable</span> ngx_http_ssi_module</span><br><span class="line">  --without-http_userid_module       <span class="built_in">disable</span> ngx_http_userid_module</span><br><span class="line">  --without-http_access_module       <span class="built_in">disable</span> ngx_http_access_module</span><br><span class="line">  --without-http_auth_basic_module   <span class="built_in">disable</span> ngx_http_auth_basic_module</span><br><span class="line">  --without-http_mirror_module       <span class="built_in">disable</span> ngx_http_mirror_module</span><br><span class="line">  --without-http_autoindex_module    <span class="built_in">disable</span> ngx_http_autoindex_module</span><br><span class="line">  --without-http_geo_module          <span class="built_in">disable</span> ngx_http_geo_module</span><br><span class="line">  --without-http_map_module          <span class="built_in">disable</span> ngx_http_map_module</span><br><span class="line">  --without-http_split_clients_module <span class="built_in">disable</span> ngx_http_split_clients_module</span><br><span class="line">  --without-http_referer_module      <span class="built_in">disable</span> ngx_http_referer_module</span><br><span class="line">  --without-http_rewrite_module      <span class="built_in">disable</span> ngx_http_rewrite_module</span><br><span class="line">  --without-http_proxy_module        <span class="built_in">disable</span> ngx_http_proxy_module</span><br><span class="line">  --without-http_fastcgi_module      <span class="built_in">disable</span> ngx_http_fastcgi_module</span><br><span class="line">  --without-http_uwsgi_module        <span class="built_in">disable</span> ngx_http_uwsgi_module</span><br><span class="line">  --without-http_scgi_module         <span class="built_in">disable</span> ngx_http_scgi_module</span><br><span class="line">  --without-http_grpc_module         <span class="built_in">disable</span> ngx_http_grpc_module</span><br><span class="line">  --without-http_memcached_module    <span class="built_in">disable</span> ngx_http_memcached_module</span><br><span class="line">  --without-http_limit_conn_module   <span class="built_in">disable</span> ngx_http_limit_conn_module</span><br><span class="line">  --without-http_limit_req_module    <span class="built_in">disable</span> ngx_http_limit_req_module</span><br><span class="line">  --without-http_empty_gif_module    <span class="built_in">disable</span> ngx_http_empty_gif_module</span><br><span class="line">  --without-http_browser_module      <span class="built_in">disable</span> ngx_http_browser_module</span><br><span class="line">  --without-http_upstream_hash_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_hash_module</span><br><span class="line">  --without-http_upstream_ip_hash_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_ip_hash_module</span><br><span class="line">  --without-http_upstream_least_conn_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_least_conn_module</span><br><span class="line">  --without-http_upstream_random_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_random_module</span><br><span class="line">  --without-http_upstream_keepalive_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_keepalive_module</span><br><span class="line">  --without-http_upstream_zone_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_http_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-http_perl_module            <span class="built_in">enable</span> ngx_http_perl_module</span><br><span class="line">  --with-http_perl_module=dynamic    <span class="built_in">enable</span> dynamic ngx_http_perl_module</span><br><span class="line">  --with-perl_modules_path=PATH      <span class="built_in">set</span> Perl modules path</span><br><span class="line">  --with-perl=PATH                   <span class="built_in">set</span> perl binary pathname</span><br><span class="line"></span><br><span class="line">  --http-log-path=PATH               <span class="built_in">set</span> http access <span class="built_in">log</span> pathname</span><br><span class="line">  --http-client-body-temp-path=PATH  <span class="built_in">set</span> path to store</span><br><span class="line">                                     http client request body temporary files</span><br><span class="line">  --http-proxy-temp-path=PATH        <span class="built_in">set</span> path to store</span><br><span class="line">                                     http proxy temporary files</span><br><span class="line">  --http-fastcgi-temp-path=PATH      <span class="built_in">set</span> path to store</span><br><span class="line">                                     http fastcgi temporary files</span><br><span class="line">  --http-uwsgi-temp-path=PATH        <span class="built_in">set</span> path to store</span><br><span class="line">                                     http uwsgi temporary files</span><br><span class="line">  --http-scgi-temp-path=PATH         <span class="built_in">set</span> path to store</span><br><span class="line">                                     http scgi temporary files</span><br><span class="line"></span><br><span class="line">  --without-http                     <span class="built_in">disable</span> HTTP server</span><br><span class="line">  --without-http-cache               <span class="built_in">disable</span> HTTP cache</span><br><span class="line"></span><br><span class="line">  --with-mail                        <span class="built_in">enable</span> POP3/IMAP4/SMTP proxy module</span><br><span class="line">  --with-mail=dynamic                <span class="built_in">enable</span> dynamic POP3/IMAP4/SMTP proxy module</span><br><span class="line">  --with-mail_ssl_module             <span class="built_in">enable</span> ngx_mail_ssl_module</span><br><span class="line">  --without-mail_pop3_module         <span class="built_in">disable</span> ngx_mail_pop3_module</span><br><span class="line">  --without-mail_imap_module         <span class="built_in">disable</span> ngx_mail_imap_module</span><br><span class="line">  --without-mail_smtp_module         <span class="built_in">disable</span> ngx_mail_smtp_module</span><br><span class="line"></span><br><span class="line">  --with-stream                      <span class="built_in">enable</span> TCP/UDP proxy module</span><br><span class="line">  --with-stream=dynamic              <span class="built_in">enable</span> dynamic TCP/UDP proxy module</span><br><span class="line">  --with-stream_ssl_module           <span class="built_in">enable</span> ngx_stream_ssl_module</span><br><span class="line">  --with-stream_realip_module        <span class="built_in">enable</span> ngx_stream_realip_module</span><br><span class="line">  --with-stream_geoip_module         <span class="built_in">enable</span> ngx_stream_geoip_module</span><br><span class="line">  --with-stream_geoip_module=dynamic <span class="built_in">enable</span> dynamic ngx_stream_geoip_module</span><br><span class="line">  --with-stream_ssl_preread_module   <span class="built_in">enable</span> ngx_stream_ssl_preread_module</span><br><span class="line">  --without-stream_limit_conn_module <span class="built_in">disable</span> ngx_stream_limit_conn_module</span><br><span class="line">  --without-stream_access_module     <span class="built_in">disable</span> ngx_stream_access_module</span><br><span class="line">  --without-stream_geo_module        <span class="built_in">disable</span> ngx_stream_geo_module</span><br><span class="line">  --without-stream_map_module        <span class="built_in">disable</span> ngx_stream_map_module</span><br><span class="line">  --without-stream_split_clients_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_stream_split_clients_module</span><br><span class="line">  --without-stream_return_module     <span class="built_in">disable</span> ngx_stream_return_module</span><br><span class="line">  --without-stream_upstream_hash_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_stream_upstream_hash_module</span><br><span class="line">  --without-stream_upstream_least_conn_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_stream_upstream_least_conn_module</span><br><span class="line">  --without-stream_upstream_random_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_stream_upstream_random_module</span><br><span class="line">  --without-stream_upstream_zone_module</span><br><span class="line">                                     <span class="built_in">disable</span> ngx_stream_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-google_perftools_module     <span class="built_in">enable</span> ngx_google_perftools_module</span><br><span class="line">  --with-cpp_test_module             <span class="built_in">enable</span> ngx_cpp_test_module</span><br><span class="line"></span><br><span class="line">  --add-module=PATH                  <span class="built_in">enable</span> external module</span><br><span class="line">  --add-dynamic-module=PATH          <span class="built_in">enable</span> dynamic external module</span><br><span class="line"></span><br><span class="line">  --with-compat                      dynamic modules compatibility</span><br><span class="line"></span><br><span class="line">  --with-cc=PATH                     <span class="built_in">set</span> C compiler pathname</span><br><span class="line">  --with-cpp=PATH                    <span class="built_in">set</span> C preprocessor pathname</span><br><span class="line">  --with-cc-opt=OPTIONS              <span class="built_in">set</span> additional C compiler options</span><br><span class="line">  --with-ld-opt=OPTIONS              <span class="built_in">set</span> additional linker options</span><br><span class="line">  --with-cpu-opt=CPU                 build <span class="keyword">for</span> the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro, pentium3, pentium4,</span><br><span class="line">                                     athlon, opteron, sparc32, sparc64, ppc64</span><br><span class="line"></span><br><span class="line">  --without-pcre                     <span class="built_in">disable</span> PCRE library usage</span><br><span class="line">  --with-pcre                        force PCRE library usage</span><br><span class="line">  --with-pcre=DIR                    <span class="built_in">set</span> path to PCRE library sources</span><br><span class="line">  --with-pcre-opt=OPTIONS            <span class="built_in">set</span> additional build options <span class="keyword">for</span> PCRE</span><br><span class="line">  --with-pcre-jit                    build PCRE with JIT compilation support</span><br><span class="line"></span><br><span class="line">  --with-zlib=DIR                    <span class="built_in">set</span> path to zlib library sources</span><br><span class="line">  --with-zlib-opt=OPTIONS            <span class="built_in">set</span> additional build options <span class="keyword">for</span> zlib</span><br><span class="line">  --with-zlib-asm=CPU                use zlib assembler sources optimized</span><br><span class="line">                                     <span class="keyword">for</span> the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro</span><br><span class="line"></span><br><span class="line">  --with-libatomic                   force libatomic_ops library usage</span><br><span class="line">  --with-libatomic=DIR               <span class="built_in">set</span> path to libatomic_ops library sources</span><br><span class="line"></span><br><span class="line">  --with-openssl=DIR                 <span class="built_in">set</span> path to OpenSSL library sources</span><br><span class="line">  --with-openssl-opt=OPTIONS         <span class="built_in">set</span> additional build options <span class="keyword">for</span> OpenSSL</span><br><span class="line"></span><br><span class="line">  --with-debug                       <span class="built_in">enable</span> debug logging</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从上面的帮助可以看到，主要的编译配置分为3类</p><ul><li>配置文件位置指定</li><li>指定使用和不使用的模块with（增加编译）、without（移除编译）</li><li>优化参数、第三方模块，日志位置等</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编译,指定位置</span></span><br><span class="line">./configure --prefix=/home/nginx</span><br></pre></td></tr></table></figure><p>可能会出现报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class="line">You can either <span class="built_in">disable</span> the module by using --without-http_rewrite_module</span><br><span class="line">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class="line">statically from the <span class="built_in">source</span> with nginx by using --with-pcre=&lt;path&gt; option.</span><br></pre></td></tr></table></figure><p>根据提示，可以安装对应的库，或者在编译的时候选择移除对应的模块，或者选择从源码编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装 pcre library</span></span><br><span class="line">yum -y install pcre-devel</span><br></pre></td></tr></table></figure><p>再次编译提示缺少 zlib</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: the HTTP gzip module requires the zlib library.</span><br><span class="line">You can either <span class="built_in">disable</span> the module by using --without-http_gzip_module</span><br><span class="line">option, or install the zlib library into the system, or build the zlib library</span><br><span class="line">statically from the <span class="built_in">source</span> with nginx by using --with-zlib=&lt;path&gt; option.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装zlib library</span></span><br><span class="line">yum -y install zlib-devel</span><br></pre></td></tr></table></figure><p>再次编译以后，提示编译成功,以及nginx 相关的路径、模块等目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Configuration summary</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + OpenSSL library is not used</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: <span class="string">&quot;/home/nginx&quot;</span></span><br><span class="line">  nginx binary file: <span class="string">&quot;/home/nginx/sbin/nginx&quot;</span></span><br><span class="line">  nginx modules path: <span class="string">&quot;/home/nginx/modules&quot;</span></span><br><span class="line">  nginx configuration prefix: <span class="string">&quot;/home/nginx/conf&quot;</span></span><br><span class="line">  nginx configuration file: <span class="string">&quot;/home/nginx/conf/nginx.conf&quot;</span></span><br><span class="line">  nginx pid file: <span class="string">&quot;/home/nginx/logs/nginx.pid&quot;</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">&quot;/home/nginx/logs/error.log&quot;</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">&quot;/home/nginx/logs/access.log&quot;</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">&quot;client_body_temp&quot;</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">&quot;proxy_temp&quot;</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">&quot;fastcgi_temp&quot;</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">&quot;uwsgi_temp&quot;</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">&quot;scgi_temp&quot;</span></span><br></pre></td></tr></table></figure><p>编译生成了中间文件 <code>objs</code>,通过查看<code>ngx_modules.c</code>,可以知道nginx编译了哪些模块<br>执行<code>make</code>编译<code>make install</code> 安装<br>安装完成进入 <code>/home/nginx/</code>启动nginx以后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── client_body_temp</span><br><span class="line">├── conf</span><br><span class="line">├── fastcgi_temp</span><br><span class="line">├── html</span><br><span class="line">├── logs</span><br><span class="line">├── proxy_temp</span><br><span class="line">├── sbin</span><br><span class="line">├── scgi_temp</span><br><span class="line">└── uwsgi_temp</span><br></pre></td></tr></table></figure><p>就可以看到所有的目录以及文件了。</p><p>在生产环境中，要根据实际的情况增加第三方模块</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;回顾&quot;&gt;&lt;a href=&quot;#回顾&quot; class=&quot;headerlink&quot; title=&quot;回顾&quot;&gt;&lt;/a&gt;回顾&lt;/h3&gt;&lt;p&gt;之前的时候写过&lt;code&gt;Centos yum 安装nginx 后增加模块&lt;/code&gt;,源码安装的时候一笔带过，最近在学习Nginx其中的一些知识点，所以记录一下手动安装的过程，以及相关的配置。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Nginx" scheme="https://blog.searchinfogo.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>方舟服务器搭建 Ark-Server-Build</title>
    <link href="https://blog.searchinfogo.com/2020/04/14/ark-server/"/>
    <id>https://blog.searchinfogo.com/2020/04/14/ark-server/</id>
    <published>2020-04-14T13:28:48.000Z</published>
    <updated>2020-04-14T05:40:22.153Z</updated>
    
    <content type="html"><![CDATA[<p>最近被朋友拉着入了<code>方舟:进化生存</code>的坑，但是朋友家的网络有点炸裂，导致我疯狂掉线，所以查了一下教程，搭建一个非专用服务器，并做一下记录。<a id="more"></a></p><h3 id="搭建准备"><a href="#搭建准备" class="headerlink" title="搭建准备"></a>搭建准备</h3><p>因为玩的人不是很多，所以服务器选的是阿里云4C16G,200Mbps带宽按流量付费(根据这几天玩下来，流量一般稳定在100kb/s左右)，弹性ip，系统选择的是CentOS7.8 64 bit，基于LinuxGSM 方案，阿里云入网是不收费的，200Mbps 带宽有利于下载游戏。</p><h3 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h3><h4 id="增加Hosts"><a href="#增加Hosts" class="headerlink" title="增加Hosts"></a>增加Hosts</h4><p>因为国内的关系，服务器访问github拉取代码容易出现失败的情况，所以需要修改一下hosts。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"><span class="meta">#</span><span class="bash">增加下面的配置，保存 这样可以避免脚本下载的时候失败</span></span><br><span class="line">199.232.4.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure><h4 id="设置安全组"><a href="#设置安全组" class="headerlink" title="设置安全组"></a>设置安全组</h4><p>游戏需要用到几个端口，默认的阿里云服务器只开了80，443 ，打开服务器的安全组配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开对应的UDP端口, 0.0.0.0/0</span></span><br><span class="line">7777</span><br><span class="line">27015</span><br></pre></td></tr></table></figure><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> root 权限下执行,还可能会缺少，但是后面脚本会自行安装</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install mailx postfix curl wget tar bzip2 gzip unzip python3 binutils bc jq tmux glibc.i686 libstdc++ libstdc++.i686 -y</span><br></pre></td></tr></table></figure><h4 id="增加用户"><a href="#增加用户" class="headerlink" title="增加用户"></a>增加用户</h4><p>创建非root用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加用户</span></span><br><span class="line">adduser arkserver</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置密码，可以根据自己的需求设置</span></span><br><span class="line">passwd 1234546</span><br></pre></td></tr></table></figure><h4 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换用户、安装</span></span><br><span class="line">su - arkserver</span><br><span class="line">cd ~</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载linuxgsm.sh 脚本</span></span><br><span class="line">wget -O linuxgsm.sh https://linuxgsm.sh &amp;&amp; chmod +x linuxgsm.sh &amp;&amp; bash linuxgsm.sh arkserver</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装、如果下载失败，多执行几次</span></span><br><span class="line">./arkserver install</span><br></pre></td></tr></table></figure><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 可以通过键入找到命令的完整列表。</span></span><br><span class="line">./arkserver</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">./arkserver start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止</span></span><br><span class="line">./arkserver stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">./arkserver restart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新</span></span><br><span class="line">./arkserver update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制更新</span></span><br><span class="line">./arkserver force-update</span><br></pre></td></tr></table></figure><h5 id="参考LinuxGSM"><a href="#参考LinuxGSM" class="headerlink" title="参考LinuxGSM"></a><a href="https://linuxgsm.com/lgsm/arkserver/">参考LinuxGSM</a></h5>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近被朋友拉着入了&lt;code&gt;方舟:进化生存&lt;/code&gt;的坑，但是朋友家的网络有点炸裂，导致我疯狂掉线，所以查了一下教程，搭建一个非专用服务器，并做一下记录。</summary>
    
    
    
    <category term="Game" scheme="https://blog.searchinfogo.com/categories/Game/"/>
    
    
    <category term="Ark" scheme="https://blog.searchinfogo.com/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud 引入链路跟踪Sleuth及Zipkin</title>
    <link href="https://blog.searchinfogo.com/2020/03/19/spring-seluth-zipkin/"/>
    <id>https://blog.searchinfogo.com/2020/03/19/spring-seluth-zipkin/</id>
    <published>2020-03-19T03:28:09.000Z</published>
    <updated>2020-08-28T02:28:10.685Z</updated>
    
    <content type="html"><![CDATA[<p>Zipkin是一种分布式跟踪系统，它有助于收集解决微服务架构中得延迟问题所需的时序数据，它管理这些数据的收集和查找。<a id="more"></a></p><h3 id="下载-官方推荐直接下载打包好的应用，建议使用docker镜像或者jar"><a href="#下载-官方推荐直接下载打包好的应用，建议使用docker镜像或者jar" class="headerlink" title="下载 官方推荐直接下载打包好的应用，建议使用docker镜像或者jar"></a>下载 官方推荐直接下载打包好的应用，建议使用docker镜像或者jar</h3><p>使用官方一键脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://zipkin.io/quickstart.sh | bash -s</span><br><span class="line">java -jar zipkin.jar</span><br></pre></td></tr></table></figure><p>docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9411:9411 openzipkin/zipkin</span><br></pre></td></tr></table></figure><p>访问<br>任一方式启动后，访问 <a href="http://localhost:9411/zipkin/">http://localhost:9411/zipkin/</a> ，如下图<br><img src="WX20200319-113846.png" alt="zipkin"></p><h3 id="项目集成"><a href="#项目集成" class="headerlink" title="项目集成"></a>项目集成</h3><p>2.pom.xml 配置</p><p>增加如下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果项目中包含  aspectjweaver 这个jar ，需要指定jar包版本为1.8.10，否则项目启动会出错</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置采样等参数"><a href="#配置采样等参数" class="headerlink" title="配置采样等参数"></a>配置采样等参数</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#zipkin配置 # 指定了 Zipkin 服务器的地址</span></span><br><span class="line"><span class="string">spring.zipkin.base-url</span> <span class="string">=</span> <span class="string">http://localhost:9411/</span> </span><br><span class="line"><span class="comment">#采样率 1.0表示全部采样</span></span><br><span class="line"><span class="string">spring.sleuth.sampler.probability</span> <span class="string">=</span> <span class="number">1.0</span></span><br></pre></td></tr></table></figure><p>服务调用以后，就可以看到具体的调用请求时间，但是在这个过程中也碰到了一些问题</p><ul><li>如果屏蔽一些接口记录，例如 健康检查会产生大量的无用数据，影响查询</li><li>如果使用mysql查询会有一定的影响，官方也不建议使用</li><li>使用官方的jar后，无法进行改造，满足不了一些额外的需求</li><li>存储数据安全规范等问题</li></ul><h3 id="如果使用ES进行存储（建议使用）"><a href="#如果使用ES进行存储（建议使用）" class="headerlink" title="如果使用ES进行存储（建议使用）"></a>如果使用ES进行存储（建议使用）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> STORAGE_TYPE 指定存储类型 ES_HOSTS es ip 通过逗号隔开，可以使用多个，ES_USERNAME ES用户名 ES_PASSWORD ES密码 ES_INDEX 自定义存储索引</span></span><br><span class="line">STORAGE_TYPE=elasticsearch ES_HOSTS=172.16.28.56:9200,172.16.28.57:9200  ES_USERNAME=admin ES_PASSWORD=123456 ES_INDEX=zipkin-trace  java -jar /zipkin.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Zipkin是一种分布式跟踪系统，它有助于收集解决微服务架构中得延迟问题所需的时序数据，它管理这些数据的收集和查找。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="调用链监控" scheme="https://blog.searchinfogo.com/tags/%E8%B0%83%E7%94%A8%E9%93%BE%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>lightsail使用root用户登录</title>
    <link href="https://blog.searchinfogo.com/2019/11/22/lightsail-use-root-logn/"/>
    <id>https://blog.searchinfogo.com/2019/11/22/lightsail-use-root-logn/</id>
    <published>2019-11-22T02:29:26.137Z</published>
    <updated>2019-11-22T02:48:29.880Z</updated>
    
    <content type="html"><![CDATA[<p>在使用AWS云的时候，使用私钥登录，但是登录的用户权限是普通用户，个人使用的时候有很多的不变，通过下面的方法可以修改为root权限登录。<a id="more"></a><br>在创建服务器的时候，选择增加脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo root:123456 |sudo chpasswd root</span><br><span class="line">sudo sed -i &#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i &#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27; /etc/ssh/sshd_config;</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><p>需要注意的：<br>   root: 后面的部分需要修改为你自己的密码，如果你的服务器已经创建，可以建一个<code>login.sh</code>文件，将上面的脚本粘贴进去，然后执行<code>chmod +x login.sh</code><br>   ,<code>sh login</code>,之后服务器会重启，然后就可以尝试使用密码登录了，之前使用普通用户ssh 登录，也可以将用户名改为root进行登录。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在使用AWS云的时候，使用私钥登录，但是登录的用户权限是普通用户，个人使用的时候有很多的不变，通过下面的方法可以修改为root权限登录。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>初识Dart(一)</title>
    <link href="https://blog.searchinfogo.com/2019/07/15/study-dart-1/"/>
    <id>https://blog.searchinfogo.com/2019/07/15/study-dart-1/</id>
    <published>2019-07-15T12:06:52.000Z</published>
    <updated>2019-10-20T04:54:47.416Z</updated>
    
    <content type="html"><![CDATA[<p>2011 年 10 月，在丹麦召开的 GOTO 大会上，Google 发布了一种新的编程语言 Dart。如同 Kotlin 和 Swift 的出现，分别是为了解决 Java 和 Objective-C 在编写应用程序的一些实际问题一样，Dart 的诞生正是要解决 JavaScript 存在的、在语言本质上无法改进的缺陷。<a id="more"></a></p><p>不过因为Node的出现，JavaScript得到了告诉的发展了，Dart并没有流行起来，不过因为Flutter的出现，Dart迎来了自己的第二春。</p><p>学习语言的第一件事情就是准备一个环境，在<a href="https://repl.it/languages/dart">repl</a>新建一个<code>main.dart</code>文件</p><h3 id="范例，hello-world"><a href="#范例，hello-world" class="headerlink" title="范例，hello world"></a>范例，hello world</h3><figure class="highlight plain"><figcaption><span>dart</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">void main() &#123;</span><br><span class="line">    print(&#39;Hello World!&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击<code>run</code><br>可以看到右边打印出来内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dart VM version: 2.2.0 (Unknown timestamp) on &quot;linux_x64&quot;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> run-project</span></span><br><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>Dart 也是用main做函数的入口的，跟Java很像。</p><h3 id="Dart的变量与类型"><a href="#Dart的变量与类型" class="headerlink" title="Dart的变量与类型"></a>Dart的变量与类型</h3><h4 id="Dart的基本内置类型有："><a href="#Dart的基本内置类型有：" class="headerlink" title="Dart的基本内置类型有："></a>Dart的基本内置类型有：</h4><ul><li>Numbers</li><li>Strings</li><li>Booleans</li><li>Lists</li><li>Sets</li><li>Maps</li><li>Runes</li><li>Symbols</li></ul><p><code>Numbers</code>有两种子类（int 和 double）<br><code>Strings</code>跟我们平常用的String没有什么区别<br><code>Booleans</code>是类型安全的，意味着我们不能使用if (nonbooleanValue) or assert (nonbooleanValue) 这样的代码去判断，而应该显示的检查<br><code>Lists</code>在Dart中，数组是List对象，因此大多数人只是将它们称为列表。<br><code>Sets</code>无序集合<br><code>Maps</code>key和value可以是任何类型<br><code>Runes</code>UTF-32字符串<br><code>Symbols</code>开发中基本上用不上</p><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><ul><li>const 表示常量在编译期能确定的值</li><li>final 在运行时确定，一旦确定不可变更<br>还有一些流程控制语法，各个语言基本上大同小异，可以参考[官方文档}(<a href="https://dart.dev/guides/language),%E5%AD%A6%E4%B9%A0%E8%AF%AD%E8%A8%80%E7%9A%84%E8%BF%87%E7%A8%8B%E6%AF%94%E8%BE%83%E9%87%8D%E8%A6%81%E7%9A%84%E5%B0%B1%E6%98%AF%E7%BB%83%E4%B9%A0%EF%BC%8C%E5%A4%9A%E5%86%99%EF%BC%8C%E5%A4%9A%E6%80%9D%E8%80%83%EF%BC%8C%E5%B0%B1%E4%BC%9A%E6%9C%89%E8%BF%9B%E6%AD%A5%E3%80%82">https://dart.dev/guides/language),学习语言的过程比较重要的就是练习，多写，多思考，就会有进步。</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;2011 年 10 月，在丹麦召开的 GOTO 大会上，Google 发布了一种新的编程语言 Dart。如同 Kotlin 和 Swift 的出现，分别是为了解决 Java 和 Objective-C 在编写应用程序的一些实际问题一样，Dart 的诞生正是要解决 JavaScript 存在的、在语言本质上无法改进的缺陷。</summary>
    
    
    
    <category term="Dart" scheme="https://blog.searchinfogo.com/categories/Dart/"/>
    
    
    <category term="Dart" scheme="https://blog.searchinfogo.com/tags/Dart/"/>
    
  </entry>
  
  <entry>
    <title>什么是Libra(天秤座)</title>
    <link href="https://blog.searchinfogo.com/2019/07/12/what-is-libra/"/>
    <id>https://blog.searchinfogo.com/2019/07/12/what-is-libra/</id>
    <published>2019-07-12T13:45:20.000Z</published>
    <updated>2019-10-20T04:54:47.426Z</updated>
    
    <content type="html"><![CDATA[<p>什么是<code>Libra</code>,Libra是有Facebook主导发行的一种数字货币。数字货币在最近几年的时间中，因为比特币的暴涨和暴跌走入人们的视野中，饱受各种争议。有人赚钱、有人亏钱，但是我们更应该关心的是区块链技术能给人们的生活带来什么改变。<a id="more"></a></p><blockquote><p>Libra’s mission is to enable a simple global currency and financial infrastructure that empowers billions of people.</p></blockquote><p>上面的是Libra 对自己的描述，或者理解为定位，如果全球都使用同一种货币进行交易的话，里面会有多大的想象力以及前景，虽然现在Libra面临着各种各样的法律问题和风险，但是如果能慢慢解决的话，我还是非常看好它的前景的。</p><p><code>Libra</code> 使用Facebook开发的Move语言，接下来我们简单的来跑个demo，了解一下<code>Libra</code>，现在它只能在macOS和Linux 上运行</p><h3 id="Move-语言的三大用处"><a href="#Move-语言的三大用处" class="headerlink" title="Move 语言的三大用处"></a>Move 语言的三大用处</h3><ul><li>发行数字货币、Token、数字资产</li><li>灵活处理区块链交易</li><li>验证器（Validator）管理</li></ul><h3 id="Clone-Libra"><a href="#Clone-Libra" class="headerlink" title="Clone Libra"></a>Clone Libra</h3><p>下载代码到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/libra/libra.git &amp;&amp; cd libra</span><br><span class="line"><span class="meta">#</span><span class="bash">结果</span></span><br><span class="line">Cloning into &#x27;libra&#x27;...</span><br><span class="line">remote: Enumerating objects: 3799, done.</span><br><span class="line">remote: Total 3799 (delta 0), reused 0 (delta 0), pack-reused 3799</span><br><span class="line">Receiving objects: 100% (3799/3799), 3.47 MiB | 1.09 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (1874/1874), done.</span><br></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">./scripts/dev_setup.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">结果</span></span><br><span class="line">Installing Rust......</span><br><span class="line">info: downloading installer</span><br><span class="line">info: syncing channel updates for &#x27;stable-x86_64-apple-darwin&#x27;</span><br><span class="line">info: latest update on 2019-07-04, rust version 1.36.0 (a53f9df32 2019-07-03)</span><br><span class="line">info: downloading component &#x27;rustc&#x27;</span><br><span class="line"> 82.2 MiB /  82.2 MiB (100 %)   8.8 MiB/s in 10s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-std&#x27;</span><br><span class="line"> 55.8 MiB /  55.8 MiB (100 %)   8.6 MiB/s in  6s ETA:  0s</span><br><span class="line">info: downloading component &#x27;cargo&#x27;</span><br><span class="line">info: downloading component &#x27;rust-docs&#x27;</span><br><span class="line"> 11.1 MiB /  11.1 MiB (100 %)   8.6 MiB/s in  1s ETA:  0s</span><br><span class="line">info: installing component &#x27;rustc&#x27;</span><br><span class="line"> 82.2 MiB /  82.2 MiB (100 %)  12.6 MiB/s in  6s ETA:  0s</span><br><span class="line">info: installing component &#x27;rust-std&#x27;</span><br><span class="line"> 55.8 MiB /  55.8 MiB (100 %)  16.2 MiB/s in  3s ETA:  0s</span><br><span class="line">info: installing component &#x27;cargo&#x27;</span><br><span class="line">info: installing component &#x27;rust-docs&#x27;</span><br><span class="line"> 11.1 MiB /  11.1 MiB (100 %)   2.2 MiB/s in  5s ETA:  0s</span><br><span class="line">info: default toolchain set to &#x27;stable&#x27;</span><br><span class="line"></span><br><span class="line">  stable installed - rustc 1.36.0 (a53f9df32 2019-07-03)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Rust is installed now. Great!</span><br><span class="line"></span><br><span class="line">To get started you need Cargo&#x27;s bin directory ($HOME/.cargo/bin) in your PATH </span><br><span class="line">environment variable. Next time you log in this will be done automatically.</span><br><span class="line"></span><br><span class="line">To configure your current shell run source $HOME/.cargo/env</span><br><span class="line">info: syncing channel updates for &#x27;stable-x86_64-apple-darwin&#x27;</span><br><span class="line">info: checking for self-updates</span><br><span class="line"></span><br><span class="line">  stable-x86_64-apple-darwin unchanged - rustc 1.36.0 (a53f9df32 2019-07-03)</span><br><span class="line"></span><br><span class="line">info: syncing channel updates for &#x27;nightly-2019-07-08-x86_64-apple-darwin&#x27;</span><br><span class="line">info: latest update on 2019-07-08, rust version 1.38.0-nightly (6e310f2ab 2019-07-07)</span><br><span class="line">info: downloading component &#x27;rustc&#x27;</span><br><span class="line"> 58.9 MiB /  58.9 MiB (100 %)   1.5 MiB/s in 57s ETA:  0s     </span><br><span class="line">info: downloading component &#x27;rust-std&#x27;</span><br><span class="line">168.6 MiB / 168.6 MiB (100 %)   2.2 MiB/s in  1m  5s ETA:  0s</span><br><span class="line">info: downloading component &#x27;cargo&#x27;</span><br><span class="line">  3.6 MiB /   3.6 MiB (100 %)   2.8 MiB/s in  1s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-docs&#x27;</span><br><span class="line"> 11.6 MiB /  11.6 MiB (100 %)   2.3 MiB/s in  5s ETA:  0s</span><br><span class="line">info: installing component &#x27;rustc&#x27;</span><br><span class="line"> 58.9 MiB /  58.9 MiB (100 %)  12.7 MiB/s in  4s ETA:  0s</span><br><span class="line">info: installing component &#x27;rust-std&#x27;</span><br><span class="line">168.6 MiB / 168.6 MiB (100 %)  26.8 MiB/s in  6s ETA:  0s</span><br><span class="line">info: installing component &#x27;cargo&#x27;</span><br><span class="line">info: installing component &#x27;rust-docs&#x27;</span><br><span class="line"> 11.6 MiB /  11.6 MiB (100 %)   2.2 MiB/s in  4s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rustfmt&#x27;</span><br><span class="line">  2.0 MiB /   2.0 MiB (100 %) 1005.6 KiB/s in  3s ETA:  0s</span><br><span class="line">info: installing component &#x27;rustfmt&#x27;</span><br><span class="line">info: downloading component &#x27;clippy&#x27;</span><br><span class="line">  1.3 MiB /   1.3 MiB (100 %) 383.7 KiB/s in  5s ETA:  0s</span><br><span class="line">info: installing component &#x27;clippy&#x27;</span><br><span class="line">Installing CMake......</span><br><span class="line">Finished installing all dependencies.</span><br><span class="line"></span><br><span class="line">You should now be able to build the project by running:</span><br><span class="line">    source /Users/xxx/.cargo/env</span><br><span class="line">    cargo build</span><br><span class="line"><span class="meta">#</span><span class="bash">如果出现下面的错误，需要安装 protobuf</span></span><br><span class="line">error: failed to run custom build command for `network v0.1.0</span><br><span class="line">brew install protobuf</span><br></pre></td></tr></table></figure><p>出现错误可以查看 <a href="https://developers.libra.org/docs/my-first-transaction#setup-libra-core">roubleshooting</a> 解决<br>上面的过程取决与你的网速，有可能会很慢，通过上面的一系列操作，基本的环境配置好了，接下来就可以在测试网络上开始交易了（现在还是测试网络，现在还没有办法支持10亿人的交易需求，后面会慢慢转向私有的联盟链）</p><h3 id="命令行运行"><a href="#命令行运行" class="headerlink" title="命令行运行"></a>命令行运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">./scripts/cli/start_cli_testnet.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">结果</span></span><br><span class="line">xxxxxxxx</span><br><span class="line"> Finished dev [unoptimized + debuginfo] target(s) in 3m 31s</span><br><span class="line">     Running `target/debug/client --host ac.testnet.libra.org --port 8000 -s ./scripts/cli/trusted_peers.config.toml`</span><br><span class="line">Connected to validator at: ac.testnet.libra.org:8000</span><br><span class="line">usage: &lt;command&gt; &lt;args&gt;</span><br><span class="line"></span><br><span class="line">Use the following commands:</span><br><span class="line"></span><br><span class="line">account | a</span><br><span class="line">    Account operations</span><br><span class="line">query | q</span><br><span class="line">    Query operations</span><br><span class="line">transfer | transferb | t | tb</span><br><span class="line">    &lt;sender_account_address&gt;|&lt;sender_account_ref_id&gt; &lt;receiver_account_address&gt;|&lt;receiver_account_ref_id&gt; &lt;number_of_coins&gt; [gas_unit_price_in_micro_libras (default=0)] [max_gas_amount_in_micro_libras (default 10000)] Suffix &#x27;b&#x27; is for blocking.</span><br><span class="line">    Transfer coins (in libra) from account to another.</span><br><span class="line">submit | submitb | s | sb</span><br><span class="line">    &lt;signer_account_address&gt;|&lt;signer_account_ref_id&gt; &lt;path_to_raw_transaction&gt; Suffix &#x27;b&#x27; is for blocking. </span><br><span class="line">    Load a RawTransaction from file and submit to the network</span><br><span class="line">help | h</span><br><span class="line">    Prints this help</span><br><span class="line">quit | q!</span><br><span class="line">    Exit this client</span><br><span class="line">Please, input commands:</span><br></pre></td></tr></table></figure><p>使用上面的命令可以构建和运行客户端，并将客户端连接到<code>test</code>网络，并列出了常用的命令</p><h3 id="运行你第一笔交易"><a href="#运行你第一笔交易" class="headerlink" title="运行你第一笔交易"></a>运行你第一笔交易</h3><h4 id="创建两个账户"><a href="#创建两个账户" class="headerlink" title="创建两个账户"></a>创建两个账户</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">libra%</span><span class="bash"> account</span></span><br><span class="line">usage: account &lt;arg&gt;</span><br><span class="line"></span><br><span class="line">Use the following args for this command:</span><br><span class="line"></span><br><span class="line">create | c </span><br><span class="line">Create an account. Returns reference ID to use in other operations</span><br><span class="line">list | la </span><br><span class="line">Print all accounts that were created or loaded</span><br><span class="line">recover | r &lt;file_path&gt;</span><br><span class="line">Recover Libra wallet from the file path</span><br><span class="line">write | w &lt;file_path&gt;</span><br><span class="line">Save Libra wallet mnemonic recovery seed to disk</span><br><span class="line">mint | mintb | m | mb &lt;receiver_account_ref_id&gt;|&lt;receiver_account_address&gt; &lt;number_of_coins&gt;</span><br><span class="line">Mint coins to the account. Suffix &#x27;b&#x27; is for blocking</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> account create</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Creating/retrieving next account from wallet</span></span><br><span class="line">Created/retrieved account #0 address 4be45f015f45a2968d68a2ac56ebd1bfa05a43f87fefb2f5327bea292c354ece</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> account create</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Creating/retrieving next account from wallet</span></span><br><span class="line">Created/retrieved account #1 address b83ef4576f74faa787abc8233a501540dcbb9ede236ee967535051ac8c8f6fab</span><br></pre></td></tr></table></figure><p><code>#0</code>是账户索引，十六进制字符串是账号地址</p><h4 id="转账"><a href="#转账" class="headerlink" title="转账"></a>转账</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">libra%</span><span class="bash"> account mint 0 110</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Minting coins</span></span><br><span class="line">Mint request submitted</span><br></pre></td></tr></table></figure><ul><li>0 是账户索引</li><li>110 是往账户添加的金额</li></ul><p>第二个账户也进行相同的操作，需要注意的是，只是发出了命令进行增加，还需要确认账户中的金额</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">libra%</span><span class="bash"> query balance 0</span></span><br><span class="line">Balance is: 110.000000</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> query balance 1</span></span><br><span class="line">Balance is: 52.000000</span><br></pre></td></tr></table></figure><p>可以看到对应的金额已经添加到账户</p><h4 id="提交交易"><a href="#提交交易" class="headerlink" title="提交交易"></a>提交交易</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">libra%</span><span class="bash"> query sequence 0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Getting current sequence number</span></span><br><span class="line">Sequence number is: 0</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> query sequence 1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Getting current sequence number</span></span><br><span class="line">Sequence number is: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">libra%</span><span class="bash"> transfer 0 1 10</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Transferring</span></span><br><span class="line">Transaction submitted to validator</span><br><span class="line">To query for transaction status, run: query txn_acc_seq 0 0 &lt;fetch_events=true|false&gt;</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> query sequence 0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt; Getting current sequence number</span></span><br><span class="line">Sequence number is: 1</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> query balance 0</span></span><br><span class="line">Balance is: 100.000000</span><br><span class="line"><span class="meta">libra%</span><span class="bash"> query balance 1</span></span><br><span class="line">Balance is: 62.000000</span><br></pre></td></tr></table></figure><ul><li>0 是第一个账户</li><li>1是第二个账户</li><li>10是要从第一个转账到第二个账户的金额</li></ul><p>通过查询账户，可以看到对应的金额已经变更</p><p>整个过程非常的简单，试想一下，如果全球都支持使用<code>Libra</code>进行支付，支付将会变的更加便捷，当然支付宝也可以完成类似的操作，但是背后所涉及的交易结算是非常复杂的，还需要支付额外的手续费。那<code>Libra</code>是如何维持生存呢，看了一下，靠发币是抵押的法币产生的利息支付运营成本，不过这玩意要是真的流行，那就是全球羊毛收割机了，未来谁知道呢。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;什么是&lt;code&gt;Libra&lt;/code&gt;,Libra是有Facebook主导发行的一种数字货币。数字货币在最近几年的时间中，因为比特币的暴涨和暴跌走入人们的视野中，饱受各种争议。有人赚钱、有人亏钱，但是我们更应该关心的是区块链技术能给人们的生活带来什么改变。</summary>
    
    
    
    <category term="Cryptocurrency" scheme="https://blog.searchinfogo.com/categories/Cryptocurrency/"/>
    
    
    <category term="Libra" scheme="https://blog.searchinfogo.com/tags/Libra/"/>
    
  </entry>
  
  <entry>
    <title>第一个flutter</title>
    <link href="https://blog.searchinfogo.com/2019/07/11/first-flutter-app/"/>
    <id>https://blog.searchinfogo.com/2019/07/11/first-flutter-app/</id>
    <published>2019-07-11T12:16:53.000Z</published>
    <updated>2020-08-28T02:31:56.968Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://flutter.dev/">Flutter</a> is Google’s portable UI toolkit for building beautiful, natively-compiled applications for mobile, web, and desktop from a single codebase.<a id="more"></a></p><blockquote><p>Flutter是一个由谷歌开发的开源移动应用软件开发工具包，用于为Android和iOS开发应用，同时也将是Google Fuchsia下开发应用的主要工具</p></blockquote><p>最近看到很多的技术网站都在发Flutter相关的技术文章，所以自己也花时间了解了一下，写了个简单的HelloWorld体验了一下，感觉很不错。简单的记录一下。</p><p>###安装<br>安装环境基于MAC，Windows上也没有太大的区别。<br>####安装Xcode、Android Stuido<br>#####Xcode 安装<br>Xocde 的安装比较简单，直接去App Store搜索就可以了，<img src="WX20190711-203332@2x.png" alt="示例">之后需要打开，会自动的进行相应的配置。<br>#####Android Studio 安装<br><a href="https://developer.android.com/studio">Android Studio官网下载</a><br><img src="WX20190711-203810@2x.png" alt="示例"><br>当前版本为3.4.2<br>配合相关的SDK，然后增加虚拟机<img src="WX20190711-204747@2x.png" alt="示例"><br>需要注意的是，建议使用API28,28的版本flutter会报错</p><h5 id="安装flutter"><a href="#安装flutter" class="headerlink" title="安装flutter"></a>安装flutter</h5><p>Flutter在国内访问的速度不太好，访问<a href="https://flutter.dev/docs/get-started/install">Flutter</a>，进行下载配置，建议使用梯子，推荐使用喵帕斯，可以联系我获取邀请码。</p><ul><li>增加源站镜像环境变量(使用第三方的包的时候需要用到)</li></ul><p>Windows</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">我的电脑-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量，新建用户环境变量,增加下面两个变量</span></span><br><span class="line">PUB_HOSTED_URL https://pub.flutter-io.cn </span><br><span class="line">FLUTTER_STORAGE_BASE_URL https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure><p>Mac OS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~ cd ~/.bash_profile</span><br><span class="line"><span class="meta">#</span><span class="bash">增加下面两个环境变量</span></span><br><span class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn  </span><br><span class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"><span class="meta">#</span><span class="bash">保存 ,激活生效</span></span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>将下载的安装包解压，当前的版本为<code>1.7</code>，然后配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">~ vi ~/.bash_profile</span><br><span class="line"><span class="comment">#增加如下,根据你实际的位置进行配置</span></span><br><span class="line"><span class="comment">#flutter</span></span><br><span class="line"><span class="built_in">export</span> PATH=/Users/xxx/develop/flutter/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"><span class="comment">#验证</span></span><br><span class="line">flutter --version</span><br><span class="line">  ╔════════════════════════════════════════════════════════════════════════════╗</span><br><span class="line">  ║ A new version of Flutter is available!                                     ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ To update to the latest version, run <span class="string">&quot;flutter upgrade&quot;</span>.                    ║</span><br><span class="line">  ╚════════════════════════════════════════════════════════════════════════════╝</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Flutter 1.5.4-hotfix.2 • channel stable • https://github.com/flutter/flutter.git</span><br><span class="line">Framework • revision 7a4c33425d (2 months ago) • 2019-04-29 11:05:24 -0700</span><br><span class="line">Engine • revision 52c7a1e849</span><br><span class="line">Tools • Dart 2.3.0 (build 2.3.0-dev.0.5 a1668566e5)</span><br><span class="line"><span class="comment">#提示我更新，我当时安装的是1.5.4,更新完成再次验证，更新会花点时间，使用下面的命令行走代理，或者全局也可以，根据实际情况配置</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:1087;</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:1087;</span><br><span class="line"><span class="built_in">export</span> all_proxy=socks5://127.0.0.1:1086</span><br><span class="line"><span class="comment">#运行doctor 检测配置，第一次安装需要安装额外的几个包，按照提示安装即可</span></span><br><span class="line">Running flutter doctor...</span><br><span class="line">Doctor summary (to see all details, run flutter doctor -v):</span><br><span class="line">[✓] Flutter (Channel stable, v1.7.8+hotfix.3, on Mac OS X 10.14.5 18F132, locale zh-Hans-CN)</span><br><span class="line">[!] Android toolchain - develop <span class="keyword">for</span> Android devices (Android SDK version 28.0.3)</span><br><span class="line">    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses</span><br><span class="line">[!] Xcode - develop <span class="keyword">for</span> iOS and macOS (Xcode 10.2.1)</span><br><span class="line">    ! CocoaPods out of date (1.6.0 is recommended).</span><br><span class="line">        CocoaPods is used to retrieve the iOS and macOS platform side<span class="string">&#x27;s plugin code that responds to your plugin usage on the Dart side.</span></span><br><span class="line"><span class="string">        Without CocoaPods, plugins will not work on iOS or macOS.</span></span><br><span class="line"><span class="string">        For more info, see https://flutter.dev/platform-plugins</span></span><br><span class="line"><span class="string">      To upgrade:</span></span><br><span class="line"><span class="string">        brew upgrade cocoapods</span></span><br><span class="line"><span class="string">        pod setup</span></span><br><span class="line"><span class="string">[!] iOS tools - develop for iOS devices</span></span><br><span class="line"><span class="string">    ✗ ios-deploy not installed. To install:</span></span><br><span class="line"><span class="string">        brew install ios-deploy</span></span><br><span class="line"><span class="string">[✓] Android Studio (version 3.4)</span></span><br><span class="line"><span class="string">[!] IntelliJ IDEA Ultimate Edition (version 2019.1.3)</span></span><br><span class="line"><span class="string">    ✗ Flutter plugin not installed; this adds Flutter specific functionality.</span></span><br><span class="line"><span class="string">    ✗ Dart plugin not installed; this adds Dart specific functionality.</span></span><br><span class="line"><span class="string">[!] VS Code (version 1.35.1)</span></span><br><span class="line"><span class="string">    ✗ Flutter extension not installed; install from</span></span><br><span class="line"><span class="string">      https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter</span></span><br><span class="line"><span class="string">[!] Proxy Configuration</span></span><br><span class="line"><span class="string">    ! NO_PROXY is not set</span></span><br><span class="line"><span class="string">[!] Connected device</span></span><br><span class="line"><span class="string">    ! No devices available</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">! Doctor found issues in 7 categories.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#第一次安装，需要安装下面的包，brew 的使用可用搜我之前发的文章</span></span><br><span class="line"><span class="string">brew update</span></span><br><span class="line"><span class="string">brew install --HEAD usbmuxd</span></span><br><span class="line"><span class="string">brew link usbmuxd</span></span><br><span class="line"><span class="string">brew install --HEAD libimobiledevice</span></span><br><span class="line"><span class="string">brew install ideviceinstaller</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>进入flutter的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">~ tree -L 1 </span><br><span class="line">.</span><br><span class="line">├── AUTHORS</span><br><span class="line">├── CODE_OF_CONDUCT.md</span><br><span class="line">├── CONTRIBUTING.md</span><br><span class="line">├── LICENSE</span><br><span class="line">├── PATENTS</span><br><span class="line">├── README.md</span><br><span class="line">├── analysis_options.yaml</span><br><span class="line">├── bin</span><br><span class="line">├── dartdoc_options.yaml</span><br><span class="line">├── dev</span><br><span class="line">├── examples</span><br><span class="line">├── flutter_console.bat</span><br><span class="line">├── flutter_root.iml</span><br><span class="line">├── packages</span><br><span class="line">└── version</span><br></pre></td></tr></table></figure><p>在目录中看到有个<code>examples-helloworld</code> 里面有对应的示例，使用Android Studio 打开：<br><img src="WX20190711-212257@2x.png" alt="示例">,选择对应的模拟器，Android 的和iOS 都可以，也可以使用真机，然后点击右上角运行即可<br>使用29的API会出现如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error connecting to the service protocol: HttpException: Connection closed before full header was received, uri &#x3D; http:&#x2F;&#x2F;127.0.0.1:53668&#x2F;CCQP0ed9oCM&#x3D;&#x2F;ws</span><br></pre></td></tr></table></figure><p>运行后的效果：<br><img src="WX20190711-212915@2x.png" alt="效果"></p><p>demo比较简单，但是感觉非常的方便，后面有空继续深入学习。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://flutter.dev/&quot;&gt;Flutter&lt;/a&gt; is Google’s portable UI toolkit for building beautiful, natively-compiled applications for mobile, web, and desktop from a single codebase.</summary>
    
    
    
    <category term="flutter" scheme="https://blog.searchinfogo.com/categories/flutter/"/>
    
    
    <category term="flutter" scheme="https://blog.searchinfogo.com/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>使用模拟时间在Docker 中进行测试</title>
    <link href="https://blog.searchinfogo.com/2019/07/02/use-a-fake-system-clock-with-docker/"/>
    <id>https://blog.searchinfogo.com/2019/07/02/use-a-fake-system-clock-with-docker/</id>
    <published>2019-07-02T12:49:48.000Z</published>
    <updated>2019-10-20T04:54:47.424Z</updated>
    
    <content type="html"><![CDATA[<p>在测试应用程序时，定义假系统时钟以执行使用日期和时间的代码通常很有用。虽然总是可以直接更改系统时钟，但许多人认为这种风格是不受欢迎的：</p><ul><li>它会影响计算机上运行的所有程序，而不仅仅是正在测试的应用程序</li><li>反复更改系统时钟可能既费时又麻烦<a id="more"></a>您可以为您的应用定义一个假系统时钟，而不是更改系统时钟。 在生产中，假系统时钟返回正常时间。 在测试过程中，伪造的系统时钟会在您需要有效测试覆盖时随时返回。</li></ul><p>为此，您需要定义各种不同的时钟实现，并能够轻松交换它们。 许多人会选择使用依赖注入工具，或者使用插件机制。<br>为此，您必须永远不要直接引用默认系统时钟和时区，避免使用以下方法：</p><ul><li>System.currentTimeMillis()</li><li>LocalDateTime.now() (或者类似的)</li><li>Date类的默认构造函数（后者又使用System.currentTimeMillis（））</li></ul><p>这需要一些规则，因为许多代码示例使用默认系统时钟（和时区），并且因为调用上述方法已成为习惯。<br>假时钟的可能行为包括：</p><ul><li>跳到未来</li><li>回到过去</li><li>使用固定日期和固定时间</li><li>使用固定日期，但仍然让时间变化</li><li>每次看到时钟时都会增加一秒钟</li><li>通过加速或减慢某个因素来改变时间的流逝率</li><li>使用正常的系统时钟而无需改动</li></ul><p>根据您的需要，您可能必须在部分或全部这些地方使用假系统时钟：</p><ul><li>应用代码</li><li>与数据库交互的代码</li><li>日志输出</li><li>框架类</li></ul><h3 id="例子-for-Java-8"><a href="#例子-for-Java-8" class="headerlink" title="例子 for Java 8"></a>例子 for Java 8</h3><p>java.time包的Clock类允许您创建一个假的系统时钟。 它的固定方法可以让您快速创建一个常见类型的假时钟，它只是在给定时区内返回一个固定值。 通常，您需要扩展抽象Clock类，并实现其抽象方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Clock;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> Increment by 1 second each time you look at the clock.</span></span><br><span class="line"><span class="comment"> Starts with the default system clock&#x27;s instant and time-zone.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Example output:</span></span><br><span class="line"><span class="comment">  2018-05-26T14:00:12.778Z</span></span><br><span class="line"><span class="comment">  2018-05-26T14:00:13.778Z</span></span><br><span class="line"><span class="comment">  2018-05-26T14:00:14.778Z</span></span><br><span class="line"><span class="comment">  2018-05-26T14:00:15.778Z</span></span><br><span class="line"><span class="comment">  2018-05-26T14:00:16.778Z</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> <span class="doctag">@since</span> Java 8.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ClockTicker</span> <span class="keyword">extends</span> <span class="title">Clock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Simple demo of the behaviour of this class. */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">    ClockTicker ticker = <span class="keyword">new</span> ClockTicker();</span><br><span class="line">    log(ticker.instant());</span><br><span class="line">    log(ticker.instant());</span><br><span class="line">    log(ticker.instant());</span><br><span class="line">    log(ticker.instant());</span><br><span class="line">    log(ticker.instant());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(Object msg)</span></span>&#123;</span><br><span class="line">    System.out.println(Objects.toString(msg));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> ZoneId <span class="title">getZone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> DEFAULT_TZONE;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> Clock <span class="title">withZone</span><span class="params">(ZoneId zone)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Clock.fixed(WHEN_STARTED, zone);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> Instant <span class="title">instant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nextInstant();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//PRIVATE</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Instant WHEN_STARTED = Instant.now();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ZoneId DEFAULT_TZONE = ZoneId.systemDefault();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">long</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Instant <span class="title">nextInstant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ++count;</span><br><span class="line">    <span class="keyword">return</span> WHEN_STARTED.plusSeconds(count);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Clock;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneOffset;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> Set the starting date-time and time-zone, but then</span></span><br><span class="line"><span class="comment"> let the time vary normally.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Example output:</span></span><br><span class="line"><span class="comment">  2018-12-25T05:00:00Z</span></span><br><span class="line"><span class="comment">  Sleep for 5 seconds...</span></span><br><span class="line"><span class="comment">  2018-12-25T05:00:05.005Z</span></span><br><span class="line"><span class="comment">  Done.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> <span class="doctag">@since</span> Java 8.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ClockTimeTravel</span> <span class="keyword">extends</span> <span class="title">Clock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Simple demo of the behaviour of this class. */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ClockTimeTravel timeTravel = <span class="keyword">new</span> ClockTimeTravel(</span><br><span class="line">      LocalDateTime.parse(<span class="string">&quot;2018-12-25T00:00:00&quot;</span>), ZoneOffset.of(<span class="string">&quot;-05:00&quot;</span>)</span><br><span class="line">    );</span><br><span class="line">    log(timeTravel.instant());</span><br><span class="line">    log(<span class="string">&quot;Sleep for 5 seconds...&quot;</span>);</span><br><span class="line">    Thread.currentThread().sleep(<span class="number">5000</span>);</span><br><span class="line">    log(timeTravel.instant());</span><br><span class="line">    log(<span class="string">&quot;Done.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(Object msg)</span></span>&#123;</span><br><span class="line">    System.out.println(Objects.toString(msg));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ClockTimeTravel</span><span class="params">(LocalDateTime t0, ZoneOffset zoneOffset)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.zoneOffset = zoneOffset;</span><br><span class="line">    <span class="keyword">this</span>.t0LocalDateTime = t0;</span><br><span class="line">    <span class="keyword">this</span>.t0Instant = t0.toInstant(zoneOffset);</span><br><span class="line">    <span class="keyword">this</span>.whenObjectCreatedInstant = Instant.now();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> ZoneId <span class="title">getZone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> zoneOffset;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** The caller needs to actually pass a ZoneOffset object here. */</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> Clock <span class="title">withZone</span><span class="params">(ZoneId zone)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ClockTimeTravel(t0LocalDateTime, (ZoneOffset)zone);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> Instant <span class="title">instant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nextInstant();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//PRIVATE</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/** t0 is the moment this clock object was created in Java-land. */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Instant t0Instant;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> LocalDateTime t0LocalDateTime;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> ZoneOffset zoneOffset;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Instant whenObjectCreatedInstant;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   Figure out how much time has elapsed between the moment this</span></span><br><span class="line"><span class="comment">   object was created, and the moment when this method is being called.</span></span><br><span class="line"><span class="comment">   Then, apply that diff to t0.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> Instant <span class="title">nextInstant</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Instant now = Instant.now();</span><br><span class="line">    <span class="keyword">long</span> diff = now.toEpochMilli() - whenObjectCreatedInstant.toEpochMilli();</span><br><span class="line">    <span class="keyword">return</span> t0Instant.plusMillis(diff);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例子-小于-Java8"><a href="#例子-小于-Java8" class="headerlink" title="例子 小于 Java8"></a>例子 小于 Java8</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">The TimeSource interface allows you to define various implementations of a fake system clock:</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TimeSource</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** Return the system time. */</span>  </span><br><span class="line">  <span class="function"><span class="keyword">long</span> <span class="title">currentTimeMillis</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">This implementation mimics a system clock running one day in advance:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeSrc</span> <span class="keyword">implements</span> <span class="title">TimeSource</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** One day in advance of the actual time.*/</span></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">currentTimeMillis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> System.currentTimeMillis() + ONE_DAY;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> ONE_DAY = <span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用各种TimeSource实现，您可以模拟系统时钟的任何所需行为。<br>配置JDK记录器以使用假系统时钟很简单。 一个简单的自定义Formatter可以使用TimeSource来改变LogRecord的时间：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.logging.LogRecord;</span><br><span class="line"><span class="keyword">import</span> java.util.logging.SimpleFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleFormatterTimeSource</span> <span class="keyword">extends</span> <span class="title">SimpleFormatter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> String <span class="title">format</span><span class="params">(LogRecord aLogRecord)</span> </span>&#123;</span><br><span class="line">    aLogRecord.setMillis(fTimeSource.currentTimeMillis());</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.format(aLogRecord);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> TimeSource fTimeSource = BuildImpl.forTimeSource();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的文章机翻<a href="http://www.javapractices.com/topic/TopicAction.do?Id=234">Use a fake system clock</a></p><h3 id="Docker-中修改时间"><a href="#Docker-中修改时间" class="headerlink" title="Docker 中修改时间"></a>Docker 中修改时间</h3><p>Docker 是容器技术，不同于虚拟化技术是独立的系统，Docker是通过<a href="https://coolshell.cn/articles/17010.html">NameSpace上</a>、<a href="https://coolshell.cn/articles/17029.html">NameSpace下</a> 和<a href="https://coolshell.cn/articles/17049.html">CGroup</a>来虚拟的系统，可以参考上面的几篇文章，可以让你让你了解为什么修改时间后，Docker会崩溃了（Docker 的时间其实是使用的宿主机时间）。我们一般测试的时候，需要将时间修改成指定的时间，所以只是修改时区的话，是满足不了我们的要求的。</p><p>所以我们需要其他的解决方法。</p><p>解决方案是在容器中伪造它。 这个lib 拦截所有系统调用程序用于检索当前时间和日期。<br>实施很容易。根据需要为Dockerfile添加功能：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd WORKDIR /</span><br><span class="line">git clone https://github.com/wolfcw/libfaketime.git</span><br><span class="line">cd  /libfaketime/src</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>请记住设置环境变量 LD_PRELOAD 在运行应用程序之前，您需要应用伪造的时间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CMD [&quot;&#x2F;bin&#x2F;sh&quot;, &quot;-c&quot;, &quot;LD_PRELOAD&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;faketime&#x2F;libfaketime.so.1 FAKETIME_NO_CACHE&#x3D;1 python &#x2F;srv&#x2F;intercept&#x2F;manage.py runserver 0.0.0.0:3000]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_time</span>(<span class="params">request</span>):</span></span><br><span class="line">    print(datetime.today())</span><br><span class="line">    os.environ[<span class="string">&quot;FAKETIME&quot;</span>] = <span class="string">&quot;2020-01-01&quot;</span>  <span class="comment"># Note: time of type string must be in the format &quot;YYYY-MM-DD hh:mm:ss&quot; or &quot;+15d&quot;</span></span><br><span class="line">    print(datetime.today())</span><br></pre></td></tr></table></figure><blockquote><p>上面的文章引用于 <a href="http://webmotociclismo.com/questions/277/ru-he-zai-dockerrong-qi-zhong-dong-tai-she-zhi-xi-tong-shi-jian">http://webmotociclismo.com/questions/277/ru-he-zai-dockerrong-qi-zhong-dong-tai-she-zhi-xi-tong-shi-jian</a></p></blockquote><p>后面会再单独写一篇使用Dockerfile 的详细示例。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在测试应用程序时，定义假系统时钟以执行使用日期和时间的代码通常很有用。虽然总是可以直接更改系统时钟，但许多人认为这种风格是不受欢迎的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它会影响计算机上运行的所有程序，而不仅仅是正在测试的应用程序&lt;/li&gt;
&lt;li&gt;反复更改系统时钟可能既费时又麻烦</summary>
    
    
    
    <category term="Java" scheme="https://blog.searchinfogo.com/categories/Java/"/>
    
    
    <category term="Docker" scheme="https://blog.searchinfogo.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>几款常用的性能测试工具</title>
    <link href="https://blog.searchinfogo.com/2019/06/28/some-pressure-measuring-tools/"/>
    <id>https://blog.searchinfogo.com/2019/06/28/some-pressure-measuring-tools/</id>
    <published>2019-06-28T07:08:55.000Z</published>
    <updated>2020-08-28T02:37:16.949Z</updated>
    
    <content type="html"><![CDATA[<p>在我们开发的过程中，我们难免需要对我们的接口进行压测，这样上线以后才更有信心。常用的性能测试工具：ab、Jmeter、Postman、阿里云PTS等。<a id="more"></a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="CentOS7-下安装ad"><a href="#CentOS7-下安装ad" class="headerlink" title="CentOS7 下安装ad"></a>CentOS7 下安装ad</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd-tools</span><br></pre></td></tr></table></figure><p>然后使用百度做个测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@VM_0_15_centos ~]#  ab -n 1000 -c 10 https://www.baidu.com/</span><br><span class="line">This is ApacheBench, Version 2.3 &lt;$Revision: 1430300 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking www.baidu.com (be patient)</span><br><span class="line">Completed 100 requests</span><br><span class="line">Completed 200 requests</span><br><span class="line">Completed 300 requests</span><br><span class="line">Completed 400 requests</span><br><span class="line">Completed 500 requests</span><br><span class="line">Completed 600 requests</span><br><span class="line">Completed 700 requests</span><br><span class="line">Completed 800 requests</span><br><span class="line">Completed 900 requests</span><br><span class="line">Completed 1000 requests</span><br><span class="line">Finished 1000 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        BWS/1.1</span><br><span class="line">Server Hostname:        www.baidu.com</span><br><span class="line">Server Port:            443</span><br><span class="line">SSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128</span><br><span class="line"></span><br><span class="line">Document Path:          /</span><br><span class="line">Document Length:        227 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      10</span><br><span class="line">Time taken for tests:   15.518 seconds</span><br><span class="line">Complete requests:      1000</span><br><span class="line">Failed requests:        0</span><br><span class="line">Write errors:           0</span><br><span class="line">Total transferred:      893000 bytes</span><br><span class="line">HTML transferred:       227000 bytes</span><br><span class="line">Requests per second:    64.44 [#/sec] (mean)</span><br><span class="line">Time per request:       155.176 [ms] (mean)</span><br><span class="line">Time per request:       15.518 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          56.20 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:      104  114   6.8    116     172</span><br><span class="line">Processing:    35   39   5.1     39     140</span><br><span class="line">Waiting:       35   38   5.1     39     140</span><br><span class="line">Total:        139  153   9.8    156     264</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line"><span class="meta">  50%</span><span class="bash">    156</span></span><br><span class="line"><span class="meta">  66%</span><span class="bash">    159</span></span><br><span class="line"><span class="meta">  75%</span><span class="bash">    160</span></span><br><span class="line"><span class="meta">  80%</span><span class="bash">    161</span></span><br><span class="line"><span class="meta">  90%</span><span class="bash">    163</span></span><br><span class="line"><span class="meta">  95%</span><span class="bash">    164</span></span><br><span class="line"><span class="meta">  98%</span><span class="bash">    165</span></span><br><span class="line"><span class="meta">  99%</span><span class="bash">    175</span></span><br><span class="line"><span class="meta"> 100%</span><span class="bash">    264 (longest request)</span></span><br></pre></td></tr></table></figure><p>上面就是请求后的结果。注意请求的地址后面要加<code>/</code>否则会报无效的url。</p><h4 id="Mac-上使用"><a href="#Mac-上使用" class="headerlink" title="Mac 上使用"></a>Mac 上使用</h4><p>Mac 上好像有自带的ab 工具，请求效果如下<br><img src="WX20190628-171039@2x.png" alt="Mac 请求效果"></p><h3 id="使用Jmeter"><a href="#使用Jmeter" class="headerlink" title="使用Jmeter"></a>使用Jmeter</h3><p>具体可以查看<a href="https://jmeter.apache.org/">Jmeter</a>,后面会补充这一部分的内容</p><h3 id="使用阿里云PTS"><a href="#使用阿里云PTS" class="headerlink" title="使用阿里云PTS"></a>使用阿里云PTS</h3><p>具体可参考<a href="https://www.aliyun.com/product/pts">PTS</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在我们开发的过程中，我们难免需要对我们的接口进行压测，这样上线以后才更有信心。常用的性能测试工具：ab、Jmeter、Postman、阿里云PTS等。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="性能测试工具" scheme="https://blog.searchinfogo.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>学习Elastic Stack（二）</title>
    <link href="https://blog.searchinfogo.com/2019/06/27/study-elastic-stack-2/"/>
    <id>https://blog.searchinfogo.com/2019/06/27/study-elastic-stack-2/</id>
    <published>2019-06-27T01:01:53.000Z</published>
    <updated>2019-10-20T05:19:44.007Z</updated>
    
    <content type="html"><![CDATA[<p>Elastic官方提供了Elastic Stack 和 相关产品的<a href="https://www.elastic.co/guide/index.html">文档</a>，而且提供了中文的文档，<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html"><code>《Elasticsearch 权威指南》中文版</code></a>,不过这边书是基于Elasticsearch 2.x版本的，可能有些过时。Elasticsearch需要先了解基本概念一些常规操作<code>CRUD</code>。 <a id="more"></a></p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>Elasticsearch的主要用途是搜索和分析。</p><p>Elasticsearch是Elastic Stack核心的分布式搜索和分析引擎。Logstash和Beats有助于收集，聚合和丰富您的数据并将其存储在Elasticsearch中。Kibana使您能够以交互方式探索，可视化和分享数据洞察，并管理和监控堆栈。</p><p>Elasticsearch为所有类型的数据提供实时搜索和分析。无论是结构化文档还是非结构化文本，数字数据或地理空间数据，Elasticsearch都可以以支持快速搜索的方式有效地存储和索引它。远远超出简单的数据检索和聚合信息，以发现数据中的趋势和模式。随着数据和查询量的增长，Elasticsearch的分布式特性使你部署能够与其一起无缝地增长。</p><h3 id="数据输入：文档和索引"><a href="#数据输入：文档和索引" class="headerlink" title="数据输入：文档和索引"></a>数据输入：文档和索引</h3><p>Elasticsearch是一个分布式文档存储。Elasticsearch不是将信息存储为列数据行，而是存储已经序列化为JSON文档的复杂数据结构。当群集中有多个Elasticsearch节点时，存储的文档将分布在群集中，并且可以从任何节点立即访问。</p><p>存储文档时，它会在1秒内实时索引并完全可搜索。Elasticsearch使用称为倒排索引的数据结构，支持非常快速的全文搜索。倒排索引列出任何文档中出现的每个唯一单词，并标识每个单词出现的所有文档。</p><p>索引可以被视为优化的文档集合，每个文档都是字段的集合，这些字段是包含数据的键值对。默认情况下，Elasticsearch会为每个字段中的所有数据编制索引，并且每个索引字段都具有专用的优化数据结构。例如，文本字段存储在反向索引中，数字和地理字段存储在BKD树中。使用每个字段的数据结构来汇编和返回搜索结果的能力使Elasticsearch如此之快。</p><p>Elasticsearch还具有无模式的能力，这意味着可以索引文档而无需显式指定如何处理文档中可能出现的每个不同字段。启用动态映射后，Elasticsearch会自动检测并向索引添加新字段。这种默认行为使您可以轻松索引和浏览数据 - 只需开始索引文档，Elasticsearch将检测并将布尔值，浮点和整数值，日期和字符串映射到相应的Elasticsearch数据类型。</p><p>但是，最终，您比Elasticsearch更了解您的数据以及您希望如何使用它。您可以定义规则来控制动态映射并显式定义映射，以完全控制字段的存储和索引方式。</p><p>定义自己的映射使您能够：</p><p>区分全文字符串字段和精确值字符串字段<br>执行特定于语言的文本分析<br>优化字段以进行部分匹配<br>使用自定义日期格式<br>使用诸如geo_point和geo_shape无法自动检测的数据类型<br>为不同目的以不同方式索引相同字段通常很有用。例如，您可能希望将字符串字段索引为全文搜索的文本字段和用于排序或聚合数据的关键字字段。或者，您可以选择使用多个语言分析器来处理包含用户输入的字符串字段的内容。</p><p>在索引期间应用于全文字段的分析链也在搜索时使用。查询全文字段时，查询文本在索引中查找术语之前会进行相同的分析。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Elastic官方提供了Elastic Stack 和 相关产品的&lt;a href=&quot;https://www.elastic.co/guide/index.html&quot;&gt;文档&lt;/a&gt;，而且提供了中文的文档，&lt;a href=&quot;https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html&quot;&gt;&lt;code&gt;《Elasticsearch 权威指南》中文版&lt;/code&gt;&lt;/a&gt;,不过这边书是基于Elasticsearch 2.x版本的，可能有些过时。Elasticsearch需要先了解基本概念一些常规操作&lt;code&gt;CRUD&lt;/code&gt;。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Docker、Elastic" scheme="https://blog.searchinfogo.com/tags/Docker%E3%80%81Elastic/"/>
    
  </entry>
  
  <entry>
    <title>学习Elastic Stack（一）</title>
    <link href="https://blog.searchinfogo.com/2019/06/26/study-elastic-stack-1/"/>
    <id>https://blog.searchinfogo.com/2019/06/26/study-elastic-stack-1/</id>
    <published>2019-06-26T05:35:14.000Z</published>
    <updated>2019-10-20T04:54:47.418Z</updated>
    
    <content type="html"><![CDATA[<p>前两天在<code>极客时间</code>买了<code>Elasticsearch核心技术与实战</code>的视频课程，希望加深对Elastic Stack的了解，提升自己的能力。实际的工作中也用到了 ELK进行生产环境的日志查询与分析，只是简单的使用，了解一些基本的原理，但是更高阶的内容并不了解。学习一个东西最后的方法就是去实践，同时做一些记录进行输出。<a id="more"></a></p><p><img src="elk-stack-elkb-diagram.png" alt="Elastic Stack"></p><h3 id="Elastic-Stack概念"><a href="#Elastic-Stack概念" class="headerlink" title="Elastic Stack概念"></a>Elastic Stack概念</h3><p>首先需要了解一下，什么是<code>ELK</code>，<code>为什么是Elastic Stack</code>，<a href="https://www.elastic.co/cn/elk-stack">What is the ELK Stack? Why, it’s the Elastic Stack.</a></p><blockquote><p>So, what is the ELK Stack? “ELK” is the acronym for three open source projects: Elasticsearch, Logstash, and Kibana. Elasticsearch is a search and analytics engine. Logstash is a server‑side data processing pipeline that ingests data from multiple sources simultaneously, transforms it, and then sends it to a “stash” like Elasticsearch. Kibana lets users visualize data with charts and graphs in Elasticsearch.<br>The Elastic Stack is the next evolution of the ELK Stack.</p></blockquote><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>因为是为了方便学习，所以使用docker进行环境的搭建，使用docker-compose 进行搭建，Elastic官方也提供了对应的<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html">脚本</a>，极客时间上的是基于7.1版本ES的，不过区别不是很大(增加了cerebro监控和kibana，可以自行添加)。</p><h4 id="运行-docker-compose-命令"><a href="#运行-docker-compose-命令" class="headerlink" title="运行 docker-compose 命令"></a>运行 docker-compose 命令</h4><p><code>docker-compose.yml</code> 文件内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;2.2&#x27;</span><br><span class="line">services:</span><br><span class="line">  es01:</span><br><span class="line">    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0</span><br><span class="line">    container_name: es01</span><br><span class="line">    environment:</span><br><span class="line">      - node.name=es01</span><br><span class="line">      - discovery.seed_hosts=es02</span><br><span class="line">      - cluster.initial_master_nodes=es01,es02</span><br><span class="line">      - cluster.name=docker-cluster</span><br><span class="line">      - bootstrap.memory_lock=true</span><br><span class="line">      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span><br><span class="line">    ulimits:</span><br><span class="line">      memlock:</span><br><span class="line">        soft: -1</span><br><span class="line">        hard: -1</span><br><span class="line">    volumes:</span><br><span class="line">      - esdata01:/usr/share/elasticsearch/data</span><br><span class="line">    ports:</span><br><span class="line">      - 9200:9200</span><br><span class="line">    networks:</span><br><span class="line">      - esnet</span><br><span class="line">  es02:</span><br><span class="line">    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0</span><br><span class="line">    container_name: es02</span><br><span class="line">    environment:</span><br><span class="line">      - node.name=es02</span><br><span class="line">      - discovery.seed_hosts=es01</span><br><span class="line">      - cluster.initial_master_nodes=es01,es02</span><br><span class="line">      - cluster.name=docker-cluster</span><br><span class="line">      - bootstrap.memory_lock=true</span><br><span class="line">      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span><br><span class="line">    ulimits:</span><br><span class="line">      memlock:</span><br><span class="line">        soft: -1</span><br><span class="line">        hard: -1</span><br><span class="line">    volumes:</span><br><span class="line">      - esdata02:/usr/share/elasticsearch/data</span><br><span class="line">    networks:</span><br><span class="line">      - esnet</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  esdata01:</span><br><span class="line">    driver: local</span><br><span class="line">  esdata02:</span><br><span class="line">    driver: local</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  esnet:</span><br></pre></td></tr></table></figure><p>启动、停止、销毁</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动</span></span><br><span class="line">docker-compose up</span><br><span class="line"><span class="meta">#</span><span class="bash">停止</span></span><br><span class="line">docker-compose down</span><br><span class="line"><span class="meta">#</span><span class="bash">销毁</span></span><br><span class="line">docker-compose down -v</span><br></pre></td></tr></table></figure><h4 id="检查集群状态"><a href="#检查集群状态" class="headerlink" title="检查集群状态"></a>检查集群状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:9200/_cat/health</span><br><span class="line"><span class="meta">#</span><span class="bash">表示没有正常运行</span></span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line"><span class="meta">#</span><span class="bash">正常运行如下</span></span><br><span class="line">1561531623 06:47:03 docker-cluster green 2 2 4 2 0 0 0 0 - 100.0%</span><br></pre></td></tr></table></figure><h4 id="Elasticsearch-Docker-配置修改"><a href="#Elasticsearch-Docker-配置修改" class="headerlink" title="Elasticsearch Docker 配置修改"></a>Elasticsearch Docker 配置修改</h4><p>Elasticsearch 从<code>/usr/share/elasticsearch/config/</code> 加载配置，这些配置包括 配置Elasticsearch和设置JVM选项。</p><p>更多的配置可以自行查看Elastic的官网，有更详细的介绍，上面的工作就可以完成最基本的配置了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;前两天在&lt;code&gt;极客时间&lt;/code&gt;买了&lt;code&gt;Elasticsearch核心技术与实战&lt;/code&gt;的视频课程，希望加深对Elastic Stack的了解，提升自己的能力。实际的工作中也用到了 ELK进行生产环境的日志查询与分析，只是简单的使用，了解一些基本的原理，但是更高阶的内容并不了解。学习一个东西最后的方法就是去实践，同时做一些记录进行输出。</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Docker、Elastic" scheme="https://blog.searchinfogo.com/tags/Docker%E3%80%81Elastic/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 安装Docker</title>
    <link href="https://blog.searchinfogo.com/2019/06/25/centos7-docker-install-tutorial/"/>
    <id>https://blog.searchinfogo.com/2019/06/25/centos7-docker-install-tutorial/</id>
    <published>2019-06-25T01:42:40.000Z</published>
    <updated>2019-10-20T04:54:47.366Z</updated>
    
    <content type="html"><![CDATA[<p>Docker在越来越多的项目中使用，快捷、高效的部署，为我们提供了一个统一的环境，方便部署，当然还有其他很多的优点，就不一一列举了。安装基于<a href="https://docs.docker.com/install/linux/docker-ce/centos/">Docker官方文档</a><a id="more"></a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="操作系统需求"><a href="#操作系统需求" class="headerlink" title="操作系统需求"></a>操作系统需求</h4><p>基于CentOS7发行版进行安装，需要启用<code>centos-extras</code>，默认是开启的，如果关闭了的话，需要打开</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-26-13-79 centos]# yum repolist                                                                              </span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: centos.usonyx.net</span><br><span class="line"> * epel: download.nus.edu.sg</span><br><span class="line"> * extras: centos.usonyx.net</span><br><span class="line"> * updates: centos.usonyx.net</span><br><span class="line">源标识                                     源名称                                                                  状态</span><br><span class="line">!base/7/x86_64                             CentOS-7 - Base                                                         10,019</span><br><span class="line">!epel/x86_64                               Extra Packages for Enterprise Linux 7 - x86_64                          13,221</span><br><span class="line">!extras/7/x86_64                           CentOS-7 - Extras                                                          409</span><br><span class="line">!updates/7/x86_64                          CentOS-7 - Updates                                                       1,982</span><br><span class="line">repolist: 25,631</span><br><span class="line">[root@ip-172-26-13-79 centos]#</span><br></pre></td></tr></table></figure><p>开启的话，可以执行下面的命令,<a href="https://fedoraproject.org/wiki/EPEL">参考</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-172-26-13-79 centos]# yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> on RHEL 7 it is recommended to also <span class="built_in">enable</span> the optional, extras, and HA repositories since EPEL packages may depend on packages from these repositorie</span></span><br><span class="line">[root@ip-172-26-13-79 centos]# subscription-manager repos --enable &quot;rhel-*-optional-rpms&quot; --enable &quot;rhel-*-extras-rpms&quot;  --enable &quot;rhel-ha-for-rhel-*-server-rpms&quot;</span><br></pre></td></tr></table></figure><p>建议使用<code>overlay2</code> storage driver。</p><h4 id="卸载旧的版本"><a href="#卸载旧的版本" class="headerlink" title="卸载旧的版本"></a>卸载旧的版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><p>如果没有提示，说明上面的包没有被安装。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>可以通过多种方式安装Docker CE：</p><ul><li>大多数用户通过设置 <code>Dokcer&#39;s repositories</code> 的方式安装，方便安装和进行升级，这种方法比较推荐。</li><li>有些用过通过下载RPM 包的方式安装，这种方式适合没有办法连接到网络的时候使用。</li><li>在开发和测试环境，使用自动脚本进行Dokcer安装</li></ul><h4 id="使用repository-进行安装"><a href="#使用repository-进行安装" class="headerlink" title="使用repository 进行安装"></a>使用repository 进行安装</h4><h5 id="设置-REPOSITORY"><a href="#设置-REPOSITORY" class="headerlink" title="设置 REPOSITORY"></a>设置 REPOSITORY</h5><p>1.安装所需要的包，提供对应的存储支持</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install -y yum-utils \</span></span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></table></figure><p>2.使用下面推荐的稳定repository</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h5 id="可选：开启nightly或test-repositories"><a href="#可选：开启nightly或test-repositories" class="headerlink" title="可选：开启nightly或test repositories"></a>可选：开启nightly或test repositories</h5><p>1.这些库包含在docker.repo 中，默认是关闭的，可以开启他们</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum-config-manager --<span class="built_in">enable</span> docker-ce-nightly</span></span><br></pre></td></tr></table></figure><p>2.开启test channel</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --enable docker-ce-test</span><br></pre></td></tr></table></figure><p>3.关闭</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --disable docker-ce-nightly</span><br></pre></td></tr></table></figure><p><a href="https://docs.docker.com/install/">了解更多关于 nightly 和 test channels。</a></p><h5 id="安装Docker-CE"><a href="#安装Docker-CE" class="headerlink" title="安装Docker CE"></a>安装Docker CE</h5><p>安装最新版本，或者转到下一步安装特定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install docker-ce docker-ce-cli containerd.io</span></span><br></pre></td></tr></table></figure><p>如果提示接受GPG key，请验证指纹是否匹配: <code>060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35</code><br>``<br>需要注意：如果存在多个Docker repositories 可能会导致安装最新的docker 而不是稳定版。</p><h6 id="安装特定的版本"><a href="#安装特定的版本" class="headerlink" title="安装特定的版本"></a>安装特定的版本</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum list docker-ce --showduplicates | sort -r</span></span><br><span class="line"></span><br><span class="line">docker-ce.x86_64  3:18.09.1-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64  3:18.09.0-3.el7                     docker-ce-stable</span><br><span class="line">docker-ce.x86_64  18.06.1.ce-3.el7                    docker-ce-stable</span><br><span class="line">docker-ce.x86_64  18.06.0.ce-3.el7                    docker-ce-stable</span><br></pre></td></tr></table></figure><p>返回的列表取决于启动的repositories。安装特定的版本</p><ul><li>例子，<code>docker-ce-18.09.1</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io</span><br></pre></td></tr></table></figure>Docker 已安装未启动，<code>docker</code> 组被创建，但是没有user添加进组。<h6 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br></pre></td></tr></table></figure><h6 id="通过运行hello-world-验证Docker-CE-安装正确"><a href="#通过运行hello-world-验证Docker-CE-安装正确" class="headerlink" title="通过运行hello-world 验证Docker CE 安装正确"></a>通过运行<code>hello-world</code> 验证Docker CE 安装正确</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run hello-world</span></span><br></pre></td></tr></table></figure><h4 id="通过rpm包进行安装"><a href="#通过rpm包进行安装" class="headerlink" title="通过rpm包进行安装"></a>通过rpm包进行安装</h4>如果无法使用Docker’s repository 安装Docker ,可以使用<code>.rpm</code>进行安装<h5 id="下载rpm包"><a href="#下载rpm包" class="headerlink" title="下载rpm包"></a>下载rpm包</h5>可以到<a href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a>下载<code>.rpm</code>文件选择版本进行安装。<blockquote><p>注意：如果安装nightly 或者 test包，需要把链接中的stable 换成对应的单词。</p></blockquote></li></ul><h5 id="安装Docker-CE-1"><a href="#安装Docker-CE-1" class="headerlink" title="安装Docker CE"></a>安装Docker CE</h5><p>切换到对应的目录进行下载和安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum install /path/to/package.rpm</span></span><br></pre></td></tr></table></figure><h5 id="启动Docker-1"><a href="#启动Docker-1" class="headerlink" title="启动Docker"></a>启动Docker</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start docker</span></span><br></pre></td></tr></table></figure><h5 id="通过运行hello-world-验证Docker-CE-安装正确-1"><a href="#通过运行hello-world-验证Docker-CE-安装正确-1" class="headerlink" title="通过运行hello-world 验证Docker CE 安装正确"></a>通过运行<code>hello-world</code> 验证Docker CE 安装正确</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker run hello-world</span></span><br></pre></td></tr></table></figure><h4 id="通过使用便捷脚本安装"><a href="#通过使用便捷脚本安装" class="headerlink" title="通过使用便捷脚本安装"></a>通过使用便捷脚本安装</h4><p>Docker 提供了便捷脚本在<a href="https://get.docker.com/">get.docker.com</a>和<a href="https://test.docker.com/">test.docker.com</a>,使用脚本安装可能会存在安全风险，建议不要在生产环境中使用</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Docker在越来越多的项目中使用，快捷、高效的部署，为我们提供了一个统一的环境，方便部署，当然还有其他很多的优点，就不一一列举了。安装基于&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/&quot;&gt;Docker官方文档&lt;/a&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.searchinfogo.com/categories/Linux/"/>
    
    
    <category term="Docker" scheme="https://blog.searchinfogo.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Feign表单提交</title>
    <link href="https://blog.searchinfogo.com/2019/06/12/feign-post-form-data/"/>
    <id>https://blog.searchinfogo.com/2019/06/12/feign-post-form-data/</id>
    <published>2019-06-12T08:29:26.000Z</published>
    <updated>2019-10-20T04:54:47.381Z</updated>
    
    <content type="html"><![CDATA[<p>Feign在正常调用的时候，一般都是基于<code>application/json</code>的方式进行传输数据的，但是有时候我们内部调用的服务是基于<code>表单提交</code>的，默认使用的<code>JSON</code>提交。所以就需要对请求进行改造。<a id="more"></a></p><h4 id="默认JSON-提交"><a href="#默认JSON-提交" class="headerlink" title="默认JSON 提交"></a>默认JSON 提交</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(name = &quot;xxx&quot;, url = &quot;xxx&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FeignClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * xxx</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xxx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value =&quot;xxx&quot;)</span></span><br><span class="line">    <span class="function">Object <span class="title">getXxxInfo</span><span class="params">(<span class="meta">@RequestBody</span> xxxReq xxxReq)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的就是默认的方式</p><h4 id="表单提交"><a href="#表单提交" class="headerlink" title="表单提交"></a>表单提交</h4><p>使用表单的情况下，需要引入两个jar，使用maven 进行添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义表单解码器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> feign.Logger;</span><br><span class="line"><span class="keyword">import</span> feign.codec.Encoder;</span><br><span class="line"><span class="keyword">import</span> feign.form.spring.SpringFormEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.ObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.http.HttpMessageConverters;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.support.SpringEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-06-11 15:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormSupportConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectFactory&lt;HttpMessageConverters&gt; messageConverters;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * new一个form编码器，实现支持form表单提交</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Encoder <span class="title">feignFormEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SpringFormEncoder(<span class="keyword">new</span> SpringEncoder(messageConverters));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开启Feign的日志</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Logger.<span class="function">Level <span class="title">logger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> feign.Response;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> xxx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-05-25 19:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;ucd&quot;, url = &quot;$&#123;xxx&#125;&quot;, configuration = FormSupportConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PayClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * xxx</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryParam</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/xxx/xxx&quot;, consumes = &#123;MediaType.APPLICATION_FORM_URLENCODED_VALUE&#125;, produces = &#123;MediaType.ALL_VALUE&#125;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function">Response <span class="title">payRequest</span><span class="params">(Map&lt;String, ?&gt; queryParam)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面定义的接收使用Response，有时候我们需要验证签名的时候，sign一般在header中，如果直接使用对象接收，就没有办法进行签名验证，使用Response进行接收,通过<code>response.body().asReader() </code>方法取出body中的内容再进行处理。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Feign在正常调用的时候，一般都是基于&lt;code&gt;application/json&lt;/code&gt;的方式进行传输数据的，但是有时候我们内部调用的服务是基于&lt;code&gt;表单提交&lt;/code&gt;的，默认使用的&lt;code&gt;JSON&lt;/code&gt;提交。所以就需要对请求进行改造。</summary>
    
    
    
    <category term="Java" scheme="https://blog.searchinfogo.com/categories/Java/"/>
    
    
    <category term="Feign" scheme="https://blog.searchinfogo.com/tags/Feign/"/>
    
  </entry>
  
  <entry>
    <title>swagger2.9.2的NumberFormatException</title>
    <link href="https://blog.searchinfogo.com/2019/05/20/swagger-2.9.2-NumberFormatException/"/>
    <id>https://blog.searchinfogo.com/2019/05/20/swagger-2.9.2-NumberFormatException/</id>
    <published>2019-05-20T08:00:45.000Z</published>
    <updated>2019-10-20T04:54:47.423Z</updated>
    
    <content type="html"><![CDATA[<p>SpringCloud、Swagger2.9.2版本,在访问swagger首页的时候，控制台报错。具体错误如下:<a id="more"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[ WARN ] [<span class="number">2019</span>-<span class="number">05</span>-<span class="number">20</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">47</span>] [http-nio-<span class="number">8080</span>-exec-<span class="number">6</span>] i.s.m.p.AbstractSerializableParameter [<span class="number">421</span>]  - Illegal DefaultValue <span class="number">0</span> <span class="keyword">for</span> parameter type integer</span><br><span class="line">java.lang.NumberFormatException: For input string: <span class="string">&quot;&quot;</span></span><br><span class="line">at java.lang.NumberFormatException.forInputString(NumberFormatException.java:<span class="number">65</span>)</span><br><span class="line">at java.lang.Long.parseLong(Long.java:<span class="number">601</span>)</span><br><span class="line">at java.lang.Long.valueOf(Long.java:<span class="number">803</span>)</span><br><span class="line">at io.swagger.models.parameters.AbstractSerializableParameter.getExample(AbstractSerializableParameter.java:<span class="number">412</span>)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:<span class="number">498</span>)</span><br><span class="line">  .....</span><br></pre></td></tr></table></figure><p>可以看到是在<code>Long.parseLong()</code>转换的时候报错了</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>试了网上说的增加默认值，但是在我本地没有生效</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiModelProperty(value = &quot;id&quot;,example = &quot;123&quot;)</span></span><br></pre></td></tr></table></figure><p>第二种方法<br>pom中增加新的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> # 默认的配置</span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"># 增加两个配置</span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-models<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>增加上面的配置后，就不再报错了。</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>1.5.20的源码，判断如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonProperty(&quot;x-example&quot;)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">getExample</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">this</span>.example == <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="keyword">if</span> (<span class="string">&quot;integer&quot;</span>.equals(<span class="keyword">this</span>.type)) &#123;</span><br><span class="line">                   <span class="keyword">return</span> Long.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span>.equals(<span class="keyword">this</span>.type)) &#123;</span><br><span class="line">                   <span class="keyword">return</span> Double.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (<span class="string">&quot;boolean&quot;</span>.equals(<span class="keyword">this</span>.type) &amp;&amp; (<span class="string">&quot;true&quot;</span>.equalsIgnoreCase(<span class="keyword">this</span>.example) || <span class="string">&quot;false&quot;</span>.equalsIgnoreCase(<span class="keyword">this</span>.defaultValue))) &#123;</span><br><span class="line">                   <span class="keyword">return</span> Boolean.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (NumberFormatException var2) &#123;</span><br><span class="line">               LOGGER.warn(String.format(<span class="string">&quot;Illegal DefaultValue %s for parameter type %s&quot;</span>, <span class="keyword">this</span>.defaultValue, <span class="keyword">this</span>.type), var2);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">this</span>.example;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>1.5.22 的源码，判断如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonProperty(&quot;x-example&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getExample</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.example != <span class="keyword">null</span> &amp;&amp; !<span class="keyword">this</span>.example.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;integer&quot;</span>.equals(<span class="keyword">this</span>.type)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Long.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span>.equals(<span class="keyword">this</span>.type)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Double.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;boolean&quot;</span>.equals(<span class="keyword">this</span>.type) &amp;&amp; (<span class="string">&quot;true&quot;</span>.equalsIgnoreCase(<span class="keyword">this</span>.example) || <span class="string">&quot;false&quot;</span>.equalsIgnoreCase(<span class="keyword">this</span>.defaultValue))) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Boolean.valueOf(<span class="keyword">this</span>.example);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException var2) &#123;</span><br><span class="line">                LOGGER.warn(String.format(<span class="string">&quot;Illegal DefaultValue %s for parameter type %s&quot;</span>, <span class="keyword">this</span>.defaultValue, <span class="keyword">this</span>.type), var2);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.example;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.example;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>从上面的代码可以看出对example的判断是不同的，增加了当example为空的时候，直接返回example，所以不会再报错。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;SpringCloud、Swagger2.9.2版本,在访问swagger首页的时候，控制台报错。具体错误如下:</summary>
    
    
    
    <category term="Java" scheme="https://blog.searchinfogo.com/categories/Java/"/>
    
    
    <category term="Swagger2" scheme="https://blog.searchinfogo.com/tags/Swagger2/"/>
    
  </entry>
  
  <entry>
    <title>apollo 配置提前加载</title>
    <link href="https://blog.searchinfogo.com/2019/05/18/apollo-eagerload/"/>
    <id>https://blog.searchinfogo.com/2019/05/18/apollo-eagerload/</id>
    <published>2019-05-18T02:00:11.000Z</published>
    <updated>2019-10-20T04:54:47.361Z</updated>
    
    <content type="html"><![CDATA[<h4 id="碰到的问题"><a href="#碰到的问题" class="headerlink" title="碰到的问题"></a>碰到的问题</h4><p>项目基于SpringCloud+Apollo配置中心，在开发阶段，Feign远程调用的时候url是写死的，但是提测后，需要进行灵活配置，所以使用了占位符，发现<code>$&#123;&#125;</code>没有生效。<br>导致请求调用的时候出错。<a id="more"></a></p><h4 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h4><p>首先是检查配置是否正确，请求的代码示例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(name = &quot;xxx&quot;, url = &quot;$&#123;xxx&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FeignClientService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取实体列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xxx xxx</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/xxx/xxx/xxx&quot;)</span></span><br><span class="line">    <span class="function">FeignResp&lt;EntityListVO&gt; <span class="title">getEntityList</span><span class="params">(<span class="meta">@RequestParam(value = &quot;xxx&quot;)</span> String xxx)</span> <span class="keyword">throws</span> Exception</span>;</span><br></pre></td></tr></table></figure><p>当url使用固定时，可以正常的解析出请求的url，使用<code>$&#123;&#125;</code>没有生效。<br>这个时候查询了Apollo的文档<a href="%22https://github.com/ctripcorp/apollo/wiki/Java%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97#3213-spring-boot%E9%9B%86%E6%88%90%E6%96%B9%E5%BC%8F%E6%8E%A8%E8%8D%90%22">Java客户端使用指南3.2.1.3SpringBoot集成方式</a></p><blockquote><p>Spring Boot除了支持上述两种集成方式以外，还支持通过application.properties/bootstrap.properties来配置，该方式能使配置在更早的阶段注入，比如使用@ConditionalOnProperty的场景或者是有一些spring-boot-starter在启动阶段就需要读取配置做一些事情（如dubbo-spring-boot-project），所以对于Spring Boot环境建议通过以下方式来接入Apollo(需要0.10.0及以上版本）。<br>从1.2.0版本开始，如果希望把日志相关的配置（如logging.level.root=info或logback-spring.xml中的参数）也放在Apollo管理，那么可以额外配置apollo.bootstrap.eagerLoad.enabled=true来使Apollo的加载顺序放到日志系统加载之前，不过这会导致Apollo的启动过程无法通过日志的方式输出(因为执行Apollo加载的时候，日志系统压根没有准备好呢！所以在Apollo代码中使用Slf4j的日志输出便没有任何内容)，更多信息可以参考PR 1614。参考配置示例如下：<br>     # will inject ‘application’ namespace in bootstrap phase<br>     apollo.bootstrap.enabled = true<br>     # put apollo initialization before logging system initialization<br>     apollo.bootstrap.eagerLoad.enabled=true</p></blockquote><p>增加了如上的配置后，发现仍然没有作用，然后检查了Apollo的版本，发现版本的<code>1.1.0</code>，这个时候内心是崩溃的，因为配置中心是公司统一使用的，所以没有办法随便升级，只能自己想办法了。</p><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><p>没办法在Springboot启动前加载，可以尝试手动加载。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ctrip.framework.apollo.ConfigService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientUrlConfig</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.initSet(<span class="string">&quot;此处写你需要提前初始化的key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initSet</span><span class="params">(String... keys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            String val = ConfigService.getAppConfig().getProperty(key, <span class="keyword">null</span>);</span><br><span class="line">            System.setProperty(key, val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在<code>SpringApplication.run()</code> 之前加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">new</span> ClientUrlConfig().init();</span><br><span class="line">       SpringApplication.run(Application.class, args);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>通过在启动前将配置注入，<code>$&#123;&#125;</code> 就可以获取到正确的链接了。</p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;碰到的问题&quot;&gt;&lt;a href=&quot;#碰到的问题&quot; class=&quot;headerlink&quot; title=&quot;碰到的问题&quot;&gt;&lt;/a&gt;碰到的问题&lt;/h4&gt;&lt;p&gt;项目基于SpringCloud+Apollo配置中心，在开发阶段，Feign远程调用的时候url是写死的，但是提测后，需要进行灵活配置，所以使用了占位符，发现&lt;code&gt;$&amp;#123;&amp;#125;&lt;/code&gt;没有生效。&lt;br&gt;导致请求调用的时候出错。</summary>
    
    
    
    <category term="Java" scheme="https://blog.searchinfogo.com/categories/Java/"/>
    
    
    <category term="Apollo、Feign" scheme="https://blog.searchinfogo.com/tags/Apollo%E3%80%81Feign/"/>
    
  </entry>
  
  <entry>
    <title>Java 常量字符串过长</title>
    <link href="https://blog.searchinfogo.com/2019/04/29/Java-constant-string-is-too-long/"/>
    <id>https://blog.searchinfogo.com/2019/04/29/Java-constant-string-is-too-long/</id>
    <published>2019-04-29T12:44:56.000Z</published>
    <updated>2019-10-20T04:54:47.355Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h3><p>  在IDEA中，字符串长度超过65535，进行打印，IDEA会提示<code>java: 常量字符串过长</code>。使用javac 进行编译也会有类似的提示 <a id="more"></a></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="使用StringBuilder"><a href="#使用StringBuilder" class="headerlink" title="使用StringBuilder"></a>使用StringBuilder</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">sb.append(<span class="string">&quot;String&quot;</span>);</span><br><span class="line">sb.append(<span class="string">&quot;String&quot;</span>);</span><br><span class="line">String str = sb.toString();</span><br><span class="line">String[] parts = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">System.out.println(parts.length);</span><br></pre></td></tr></table></figure><p>创建了一个对象，会根据实际的存储的内容分配内存，不会受到String在常量池中最大长度的限制<br>通过使用StringBuilder解析大文本和大JSON</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题出现&quot;&gt;&lt;a href=&quot;#问题出现&quot; class=&quot;headerlink&quot; title=&quot;问题出现&quot;&gt;&lt;/a&gt;问题出现&lt;/h3&gt;&lt;p&gt;  在IDEA中，字符串长度超过65535，进行打印，IDEA会提示&lt;code&gt;java: 常量字符串过长&lt;/code&gt;。使用javac 进行编译也会有类似的提示</summary>
    
    
    
    <category term="Java" scheme="https://blog.searchinfogo.com/categories/Java/"/>
    
    
    <category term="String" scheme="https://blog.searchinfogo.com/tags/String/"/>
    
  </entry>
  
</feed>
